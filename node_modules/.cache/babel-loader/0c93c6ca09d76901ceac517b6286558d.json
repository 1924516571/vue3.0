{"ast":null,"code":"import { TOGGLE_SLIDER, SET_TOKEN, SET_UNAME, SET_MENU_LIST, SET_PERMISSION_LIST } from \"./type.js\";\nexport default {\n  namespaced: true,\n  state: {\n    slider: {\n      opened: JSON.parse(sessionStorage.getItem(\"opened\"))\n    },\n    token: sessionStorage.getItem(\"token\") || \"\",\n    menuList: null,\n    permissionList: [],\n    uname: sessionStorage.getItem(\"uname\") || \"\"\n  },\n  mutations: {\n    [TOGGLE_SLIDER](state) {\n      state.slider.opened = !state.slider.opened;\n      sessionStorage.setItem(\"opened\", JSON.stringify(state.slider.opened));\n    },\n\n    [SET_TOKEN](state, token) {\n      state.token = token;\n      sessionStorage.setItem(\"token\", state.token);\n    },\n\n    [SET_UNAME](state, uname) {\n      state.uname = uname;\n      sessionStorage.setItem(\"uname\", state.uname);\n    },\n\n    [SET_MENU_LIST](state, menuList) {\n      state.menuList = menuList;\n    },\n\n    [SET_PERMISSION_LIST](state, permissionList) {\n      state.permissionList = permissionList;\n    }\n\n  },\n  actions: {\n    [TOGGLE_SLIDER]({\n      commit\n    }) {\n      commit(TOGGLE_SLIDER);\n    },\n\n    [SET_TOKEN]({\n      commit\n    }, token) {\n      commit(SET_TOKEN, token);\n    },\n\n    [SET_UNAME]({\n      commit\n    }, uname) {\n      commit(SET_UNAME, uname);\n    },\n\n    [SET_MENU_LIST]({\n      commit\n    }, menuList) {\n      commit(SET_MENU_LIST, menuList);\n    },\n\n    [SET_PERMISSION_LIST]({\n      commit\n    }, menuList) {\n      let allMenus = XE.filterTree(menuList, item => item.type == 1);\n      let permissionList = [];\n      allMenus.forEach(item => {\n        if (item.children && item.children.length > 0) {\n          item.children.forEach(menu => {\n            permissionList.push(`${item.url}/${item.id}/${menu.menu}`);\n          });\n        }\n      });\n      commit(SET_PERMISSION_LIST, permissionList);\n    }\n\n  }\n};","map":null,"metadata":{},"sourceType":"module"}