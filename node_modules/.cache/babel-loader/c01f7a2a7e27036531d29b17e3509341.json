{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveDirective as _resolveDirective, withDirectives as _withDirectives, createElementVNode as _createElementVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"ve_container\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\" 重置 \");\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\" > \");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_option = _resolveComponent(\"el-option\");\n\n  const _component_el_select = _resolveComponent(\"el-select\");\n\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_form = _resolveComponent(\"el-form\");\n\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n  const _component_el_tooltip = _resolveComponent(\"el-tooltip\");\n\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n\n  const _component_el_switch = _resolveComponent(\"el-switch\");\n\n  const _component_ve_table = _resolveComponent(\"ve-table\");\n\n  const _directive_permission = _resolveDirective(\"permission\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 搜索 \"), _createVNode(_component_el_form, {\n    ref: \"queryForm\",\n    inline: true,\n    model: $setup.params\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      label: \"角色\",\n      prop: \"role\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_select, {\n        clearable: \"\",\n        modelValue: $setup.role,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.role = $event),\n        placeholder: \"请选择\"\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.roleList, item => {\n          return _openBlock(), _createBlock(_component_el_option, {\n            key: item.id,\n            label: item.name,\n            value: item.id\n          }, null, 8\n          /* PROPS */\n          , [\"label\", \"value\"]);\n        }), 128\n        /* KEYED_FRAGMENT */\n        ))]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"modelValue\"])]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: _cache[1] || (_cache[1] = $event => $setup.onSubmit($setup.params, $setup.getDataList))\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.menus.search.name), 1\n        /* TEXT */\n        )]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_el_button, {\n        onClick: _cache[2] || (_cache[2] = $event => $setup.resetForm($setup.queryForm, $setup.params, $setup.getDataList))\n      }, {\n        default: _withCtx(() => [_hoisted_2]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"model\"]), _createVNode(_component_ve_table, {\n    table: {\n      data: $setup.tableData\n    },\n    pagination: {\n      onSizeChange: val => $setup.handleSizeChange(val, $setup.params, $setup.getDataList),\n      onCurrentChange: val => $setup.handleCurrentChange(val, $setup.params, $setup.getDataList),\n      currentPage: $setup.page,\n      pageSize: $setup.limit,\n      total: $setup.total\n    }\n  }, {\n    tool_bar: _withCtx(() => [_withDirectives((_openBlock(), _createBlock(_component_el_button, {\n      title: \"弹窗式\",\n      size: \"small\",\n      type: \"primary\",\n      onClick: _cache[3] || (_cache[3] = $event => $setup.handleEdit(_ctx.menus.add.name))\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.menus.add.name), 1\n      /* TEXT */\n      )]),\n      _: 1\n      /* STABLE */\n\n    })), [[_directive_permission, ['add']]]), _withDirectives((_openBlock(), _createBlock(_component_el_button, {\n      title: \"路由式\",\n      size: \"small\",\n      type: \"primary\",\n      onClick: _cache[4] || (_cache[4] = $event => $setup.handleEditRoute(_ctx.menus.add.name))\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.menus.add.name), 1\n      /* TEXT */\n      )]),\n      _: 1\n      /* STABLE */\n\n    })), [[_directive_permission, ['add']]])]),\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"name\",\n      label: \"账号\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"userName\",\n      label: \"用户名\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"password\",\n      label: \"密码\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createVNode(_component_el_tooltip, {\n        class: \"item\",\n        effect: \"dark\",\n        content: row.password,\n        placement: \"top\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"span\", null, _toDisplayString(row.password && row.password.split(\"\").fill(\"*\", 1, -1).join().replace(/\\,/g, \"\")), 1\n        /* TEXT */\n        )]),\n        _: 2\n        /* DYNAMIC */\n\n      }, 1032\n      /* PROPS, DYNAMIC_SLOTS */\n      , [\"content\"])]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_table_column, {\n      prop: \"role\",\n      label: \"角色\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createVNode(_component_el_tag, null, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString((row.role || row.role == 0) && $setup.roleList.filter(item => item.id == row.role)[0].name), 1\n        /* TEXT */\n        )]),\n        _: 2\n        /* DYNAMIC */\n\n      }, 1024\n      /* DYNAMIC_SLOTS */\n      )]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_table_column, {\n      prop: \"status\",\n      label: \"状态\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createVNode(_component_el_switch, {\n        loading: row.load ? true : false,\n        modelValue: row.status,\n        \"onUpdate:modelValue\": $event => row.status = $event,\n        \"active-value\": 1,\n        \"inactive-value\": 0,\n        \"active-color\": \"#13ce66\",\n        \"inactive-color\": \"#ff4949\",\n        onChange: val => $setup.handelSwitch(val, row)\n      }, {\n        default: _withCtx(() => [_hoisted_3]),\n        _: 2\n        /* DYNAMIC */\n\n      }, 1032\n      /* PROPS, DYNAMIC_SLOTS */\n      , [\"loading\", \"modelValue\", \"onUpdate:modelValue\", \"onChange\"])]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_table_column, {\n      fixed: \"right\",\n      label: \"操作\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_withDirectives((_openBlock(), _createBlock(_component_el_button, {\n        onClick: _withModifiers($event => $setup.handleEdit(_ctx.menus.edit.name, row), [\"prevent\"]),\n        type: \"primary\",\n        size: \"small\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.menus.edit.name), 1\n        /* TEXT */\n        )]),\n        _: 2\n        /* DYNAMIC */\n\n      }, 1032\n      /* PROPS, DYNAMIC_SLOTS */\n      , [\"onClick\"])), [[_directive_permission, ['edit']]]), _withDirectives((_openBlock(), _createBlock(_component_el_button, {\n        onClick: _withModifiers($event => $setup.handleDel(row.id), [\"prevent\"]),\n        type: \"danger\",\n        size: \"small\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.menus.del.name), 1\n        /* TEXT */\n        )]),\n        _: 2\n        /* DYNAMIC */\n\n      }, 1032\n      /* PROPS, DYNAMIC_SLOTS */\n      , [\"onClick\"])), [[_directive_permission, ['del']]])]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"table\", \"pagination\"]), _createCommentVNode(\" 编辑组件 \"), $setup.showDialog ? (_openBlock(), _createBlock($setup[\"UsersEdit\"], {\n    key: 0,\n    rowData: $setup.rowData,\n    title: $setup.dialogTitle,\n    showDialog: $setup.showDialog,\n    onCloseDialog: _cache[5] || (_cache[5] = $event => $setup.handelDialog($event))\n  }, null, 8\n  /* PROPS */\n  , [\"rowData\", \"title\", \"showDialog\"])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementBlock","_createCommentVNode","_createVNode","_component_el_form","ref","inline","model","$setup","_component_el_form_item","label","prop","_component_el_select","clearable","$event","placeholder","_Fragment","_renderList","item","_createBlock","_component_el_option","key","id","name","value","_component_el_button","type","onClick","_ctx","search","_component_ve_table","table","pagination","val","tool_bar","title","size","add","_component_el_table_column","row","_component_el_tooltip","effect","content","password","placement","_createElementVNode","_toDisplayString","split","fill","join","replace","_component_el_tag","role","filter","_component_el_switch","loading","load","status","onChange","fixed","default","edit","del","rowData","showDialog","onCloseDialog"],"sourceRoot":"","sources":["C:\\Users\\Administrator\\Desktop\\vue3-element-admin-dev\\src\\views\\layoutpages\\system\\UserTable.vue"],"sourcesContent":["<!--\n * @Author: your name\n * @Date: 2021-02-05 14:52:13\n * @LastEditTime: 2021-11-30 18:50:23\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\vue3-element-admin\\src\\views\\layoutpages\\system\\Users.vue\n-->\n<template>\n    <div class=\"ve_container\">\n        <!-- 搜索 -->\n        <el-form ref=\"queryForm\" :inline=\"true\" :model=\"params\">\n            <el-form-item label=\"角色\" prop=\"role\">\n                <el-select clearable v-model=\"role\" placeholder=\"请选择\">\n                    <el-option\n                        v-for=\"item in roleList\"\n                        :key=\"item.id\"\n                        :label=\"item.name\"\n                        :value=\"item.id\"\n                    ></el-option>\n                </el-select>\n            </el-form-item>\n            <el-form-item>\n                <el-button\n                    type=\"primary\"\n                    @click=\"onSubmit(params, getDataList)\"\n                >\n                    {{ menus.search.name }}\n                </el-button>\n                <el-button @click=\"resetForm(queryForm, params, getDataList)\">\n                    重置\n                </el-button>\n            </el-form-item>\n        </el-form>\n\n        <ve-table\n            :table=\"{\n                data: tableData,\n            }\"\n            :pagination=\"{\n                onSizeChange: (val) =>\n                    handleSizeChange(val, params, getDataList),\n                onCurrentChange: (val) =>\n                    handleCurrentChange(val, params, getDataList),\n                currentPage: page,\n                pageSize: limit,\n                total: total,\n            }\"\n        >\n            <template #tool_bar>\n                <el-button\n                    title=\"弹窗式\"\n                    v-permission=\"['add']\"\n                    size=\"small\"\n                    type=\"primary\"\n                    @click=\"handleEdit(menus.add.name)\"\n                >\n                    {{ menus.add.name }}\n                </el-button>\n                <el-button\n                    title=\"路由式\"\n                    v-permission=\"['add']\"\n                    size=\"small\"\n                    type=\"primary\"\n                    @click=\"handleEditRoute(menus.add.name)\"\n                >\n                    {{ menus.add.name }}\n                </el-button>\n            </template>\n            <el-table-column prop=\"name\" label=\"账号\" />\n            <el-table-column prop=\"userName\" label=\"用户名\" />\n            <el-table-column prop=\"password\" label=\"密码\">\n                <template v-slot=\"{ row }\">\n                    <el-tooltip\n                        class=\"item\"\n                        effect=\"dark\"\n                        :content=\"row.password\"\n                        placement=\"top\"\n                    >\n                        <span>\n                            {{\n                                row.password &&\n                                row.password\n                                    .split(\"\")\n                                    .fill(\"*\", 1, -1)\n                                    .join()\n                                    .replace(/\\,/g, \"\")\n                            }}\n                        </span>\n                    </el-tooltip>\n                </template>\n            </el-table-column>\n            <el-table-column prop=\"role\" label=\"角色\">\n                <template v-slot=\"{ row }\">\n                    <el-tag>\n                        {{\n                            (row.role || row.role == 0) &&\n                            roleList.filter((item) => item.id == row.role)[0]\n                                .name\n                        }}\n                    </el-tag>\n                </template>\n            </el-table-column>\n            <el-table-column prop=\"status\" label=\"状态\">\n                <template v-slot=\"{ row }\">\n                    <el-switch\n                        :loading=\"row.load ? true : false\"\n                        v-model=\"row.status\"\n                        :active-value=\"1\"\n                        :inactive-value=\"0\"\n                        active-color=\"#13ce66\"\n                        inactive-color=\"#ff4949\"\n                        @change=\"(val) => handelSwitch(val, row)\"\n                    >\n                        >\n                    </el-switch>\n                </template>\n            </el-table-column>\n            <el-table-column fixed=\"right\" label=\"操作\">\n                <template v-slot:default=\"{ row }\">\n                    <el-button\n                        v-permission=\"['edit']\"\n                        @click.prevent=\"handleEdit(menus.edit.name, row)\"\n                        type=\"primary\"\n                        size=\"small\"\n                    >\n                        {{ menus.edit.name }}\n                    </el-button>\n                    <el-button\n                        v-permission=\"['del']\"\n                        @click.prevent=\"handleDel(row.id)\"\n                        type=\"danger\"\n                        size=\"small\"\n                    >\n                        {{ menus.del.name }}\n                    </el-button>\n                </template>\n            </el-table-column>\n        </ve-table>\n\n        <!-- 编辑组件 -->\n        <users-edit\n            v-if=\"showDialog\"\n            :rowData=\"rowData\"\n            :title=\"dialogTitle\"\n            :showDialog=\"showDialog\"\n            @closeDialog=\"handelDialog($event)\"\n        />\n    </div>\n</template>\n<script>\nexport default {\n    data: () => ({\n        description: \"用户信息查询与设置\",\n        menus: {\n            search: { name: \"查询\" },\n            add: { name: \"添加\" },\n            edit: { name: \"编辑\" },\n            del: { name: \"删除\" },\n        },\n    }),\n};\n</script>\n\n<script setup>\n// import VeTable from \"@/components/veBase/VeTable.vue\";\nimport UsersEdit from \"./components/UsersEdit\";\nimport { reactive, toRefs, ref, onMounted, getCurrentInstance } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\n//?导入公共查询方法\nimport {\n    onSubmit,\n    resetForm,\n    handleSizeChange,\n    handleCurrentChange,\n    getAsyncRouteName,\n} from \"@/views/layoutpages/common\";\n\nconst { proxy } = getCurrentInstance();\nconst route = useRoute();\nconst router = useRouter();\nconst rowData = ref(null);\nconst dialogTitle = ref(\"\");\nconst showDialog = ref(false);\nconst queryForm = ref(null);\nconst tableData = ref([]);\nconst params = reactive({\n    role: isNaN(route.query.id * 1) ? \"\" : route.query.id * 1,\n    limit: 10,\n    page: 1,\n    total: 0,\n});\nconst { role, limit, page, total } = toRefs(params);\n\nconst roleList = ref([]);\n\n/**\n * @description:添加or编辑事件\n * @param {*}\n * @return {*}\n */\nconst handleEdit = (title, row = null) => {\n    showDialog.value = true;\n    dialogTitle.value = title;\n    rowData.value = row;\n};\n/**\n * @description: 添加页面路由式\n * @param {*}\n * @return {*}\n */\nconst handleEditRoute = async (title) => {\n    let path = \"system/components/UsersEditRoute\";\n    const toName = await getAsyncRouteName(title, path, \"add\", {\n        router,\n        route,\n    });\n    router.push({ name: toName });\n};\n/**\n * @description: 获取角色列表\n * @param {*}\n * @return {*}\n */\nconst getRoleList = async () => {\n    const { code, data } = await VE_API.system.roleList(\n        {\n            page: 1,\n            limit: 10,\n        }\n        // { Global: false }\n    );\n    if (code == \"00\") {\n        const { list } = data;\n        roleList.value = list;\n    }\n};\n/**\n * @description: dialog事件\n * @param {*}\n * @return {*}\n */\nconst handelDialog = (e) => {\n    showDialog.value = e;\n    getDataList();\n};\n/**\n * @description:用户状态切换\n * @param {*}\n * @return {*}\n */\nconst handelSwitch = async (val, row) => {\n    if (row.id == undefined) return;\n    row.load = 1;\n    const { code } = await VE_API.system.userStatus(\n        {\n            id: row.id,\n            status: val,\n        },\n        { Global: false }\n    );\n    row.load = 0;\n    if (code != \"00\") {\n        row.status = val == 1 ? 0 : 1;\n    }\n};\n/**删除行数据\n * @description:\n * @param {*}\n * @return {*}\n */\nconst handleDel = (id) => {\n    proxy\n        .$confirm(\"此操作将永久删除该数据, 是否继续?\", \"提示\", {\n            confirmButtonText: \"确定\",\n            cancelButtonText: \"取消\",\n            type: \"error\",\n        })\n        .then(async () => {\n            const { code } = await VE_API.system.userDel({ id });\n            if (code == \"00\") {\n                getDataList();\n            }\n        })\n        .catch(() => {\n            proxy.$message({\n                type: \"info\",\n                message: \"已取消删除\",\n            });\n        });\n};\n/**\n * @description: 获取列表数据\n * @param {*}\n * @return {*}\n */\nconst getDataList = async () => {\n    const { code, data } = await VE_API.system.userList(params);\n    if (code == \"00\") {\n        const { limit, page, total, list } = data;\n        params.limit = limit;\n        params.page = page;\n        params.total = total;\n        tableData.value = list;\n    }\n};\nonMounted(async () => {\n    await getRoleList();\n    await getDataList();\n    // maxHeight(pagination, queryForm, toolBar, ve_max_height);\n});\n</script>\n\n<style lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module"}