{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createBlock as _createBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\"扶뒬못\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_breadcrumb_item = _resolveComponent(\"el-breadcrumb-item\");\n\n  const _component_el_breadcrumb = _resolveComponent(\"el-breadcrumb\");\n\n  return _openBlock(), _createBlock(_component_el_breadcrumb, {\n    separator: \"/\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_breadcrumb_item, {\n      to: {\n        path: '/'\n      }\n    }, {\n      default: _withCtx(() => [_hoisted_1]),\n      _: 1\n      /* STABLE */\n\n    }), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.list, (item, index) => {\n      return _openBlock(), _createBlock(_component_el_breadcrumb_item, {\n        key: index\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(item), 1\n        /* TEXT */\n        )]),\n        _: 2\n        /* DYNAMIC */\n\n      }, 1024\n      /* DYNAMIC_SLOTS */\n      );\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))]),\n    _: 1\n    /* STABLE */\n\n  });\n}","map":{"version":3,"mappings":";;iDAUgD;;;;;;;uBAD5CA,aAKgBC,wBALhB,EAKgB;IALDC,SAAS,EAAC;EAKT,CALhB,EAA4B;sBACxB,MAA+D,CAA/DC,aAA+DC,6BAA/D,EAA+D;MAA1CC,EAAE,EAAE;QAAAC;MAAA;IAAsC,CAA/D,EAAsC;wBAAE,MAAE,aAAJ;;;;IAAA,CAAtC,CAA+D,qBAC/DC,oBAEqBC,SAFrB,EAEqB,IAFrB,EAEqBC,YAFuBC,WAEvB,EAF2B,CAApBC,IAAoB,EAAdC,KAAc,KAAT;2BAAvCZ,aAEqBI,6BAFrB,EAEqB;QAF8BS,GAAG,EAAED;MAEnC,CAFrB,EAA6D;0BACzD,MAAU,mCAAPD,OAAI;QAAA;SAAG,EAD+C;;;;MAAA,CAA7D;;MAAA;KAEqB,CAFrB;;IAAA,CAD+D,GADvC;;;;EAAA,CAA5B","names":["_createBlock","_component_el_breadcrumb","separator","_createVNode","_component_el_breadcrumb_item","to","path","_createElementBlock","_Fragment","_renderList","$setup","item","index","key"],"sourceRoot":"","sources":["C:\\Users\\Administrator\\Desktop\\vue3-element-admin-dev\\src\\components\\layout\\components\\Breadcrumb.vue"],"sourcesContent":["<!--\r\n * @Author: your name\r\n * @Date: 2021-01-15 10:57:50\r\n * @LastEditTime: 2021-11-30 18:57:09\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\vue3-element-admin\\src\\components\\layout\\components\\Breadcrumb.vue\r\n-->\r\n<template>\r\n    <el-breadcrumb separator=\"/\">\r\n        <el-breadcrumb-item :to=\"{ path: '/' }\">扶뒬못</el-breadcrumb-item>\r\n        <el-breadcrumb-item v-for=\"(item, index) in list\" :key=\"index\">\r\n            {{ item }}\r\n        </el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n</template>\r\n\r\n<script setup>\r\nimport { treeFindPath } from \"@/utils\";\r\nimport { useStore } from \"vuex\";\r\nimport { useRoute } from \"vue-router\";\r\nimport { computed } from \"vue\";\r\nconst store = useStore();\r\nconst route = useRoute();\r\nconst menuList = computed(() => store.getters.menuList).value;\r\nconst list = computed(() => {\r\n    let name = route.name;\r\n    let i = route.name.indexOf(\"/\");\r\n    if (i > -1) {\r\n        name = route.name.slice(0, i);\r\n    }\r\n    let j = name.lastIndexOf(\"-\");\r\n    return treeFindPath(\r\n        menuList,\r\n        (data) => data.id === name.slice(j + 1) * 1,\r\n        \"name\"\r\n    );\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n"]},"metadata":{},"sourceType":"module"}