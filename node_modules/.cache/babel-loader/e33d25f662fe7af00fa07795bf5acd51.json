{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = [\"data-roleId\"];\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"启用\");\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"停用\");\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"取消\");\n\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\"确定\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n  const _component_el_tree = _resolveComponent(\"el-tree\");\n\n  const _component_el_scrollbar = _resolveComponent(\"el-scrollbar\");\n\n  const _component_el_card = _resolveComponent(\"el-card\");\n\n  const _component_el_radio_button = _resolveComponent(\"el-radio-button\");\n\n  const _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n\n  const _component_el_form = _resolveComponent(\"el-form\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n\n  return _openBlock(), _createBlock(_component_el_dialog, {\n    title: $setup.title,\n    \"append-to-body\": \"\",\n    \"destroy-on-close\": \"\",\n    \"model-value\": $props.showDialog,\n    onClose: _cache[5] || (_cache[5] = $event => $setup.closeDialog())\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"span\", null, [_createVNode(_component_el_button, {\n      onClick: _cache[3] || (_cache[3] = $event => $setup.closeDialog())\n    }, {\n      default: _withCtx(() => [_hoisted_4]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: _cache[4] || (_cache[4] = $event => $setup.onSubmit())\n    }, {\n      default: _withCtx(() => [_hoisted_5]),\n      _: 1\n      /* STABLE */\n\n    })])]),\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      model: $setup.form,\n      ref: \"formRef\",\n      rules: $setup.rules,\n      \"label-width\": \"80px\",\n      inline: false\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"名称\",\n        prop: \"name\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.name,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.name = $event),\n          placeholder: \"\",\n          clearable: \"\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_el_form_item, {\n        label: \"角色名\",\n        prop: \"roleName\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.roleName,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.roleName = $event),\n          placeholder: \"\",\n          clearable: \"\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_el_form_item, {\n        class: \"ve_role_item\",\n        label: \"权限\",\n        prop: \"role\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_card, {\n          shadow: \"never\",\n          \"body-style\": {\n            padding: 0,\n            height: '200px'\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_scrollbar, null, {\n            default: _withCtx(() => [_createVNode(_component_el_tree, {\n              ref: \"tree\",\n              data: $setup.menuList,\n              \"node-key\": \"id\",\n              \"default-expand-all\": \"\",\n              props: {\n                label: 'name'\n              },\n              \"empty-text\": \"暂无数据\",\n              \"show-checkbox\": \"\",\n              \"highlight-current\": \"\"\n            }, {\n              default: _withCtx(({\n                data\n              }) => [_createElementVNode(\"span\", {\n                \"data-roleId\": data.id,\n                class: _normalizeClass({\n                  ve_tree_item: data.type == 2\n                })\n              }, _toDisplayString(data.name), 11\n              /* TEXT, CLASS, PROPS */\n              , _hoisted_1)]),\n              _: 1\n              /* STABLE */\n\n            }, 8\n            /* PROPS */\n            , [\"data\"])]),\n            _: 1\n            /* STABLE */\n\n          }), _createCommentVNode(\" card body \")]),\n          _: 1\n          /* STABLE */\n\n        })]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_el_form_item, {\n        label: \"状态\",\n        prop: \"status\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_radio_group, {\n          modelValue: $setup.status,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.status = $event)\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_radio_button, {\n            label: 1\n          }, {\n            default: _withCtx(() => [_hoisted_2]),\n            _: 1\n            /* STABLE */\n\n          }), _createVNode(_component_el_radio_button, {\n            label: 0\n          }, {\n            default: _withCtx(() => [_hoisted_3]),\n            _: 1\n            /* STABLE */\n\n          })]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"modelValue\"])]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"model\"])]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"title\", \"model-value\"]);\n}","map":{"version":3,"mappings":"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","names":["_createBlock","_component_el_dialog","title","$setup","$props","onClose","footer","_createElementVNode","_createVNode","_component_el_button","onClick","type","_component_el_form","model","ref","rules","inline","_component_el_form_item","label","prop","_component_el_input","$event","placeholder","clearable","class","_component_el_card","shadow","padding","height","_component_el_scrollbar","_component_el_tree","data","props","id","ve_tree_item","name","_hoisted_1","_createCommentVNode","_component_el_radio_group","_component_el_radio_button"],"sourceRoot":"","sources":["C:\\Users\\Administrator\\Desktop\\vue3-element-admin-dev\\src\\views\\layoutpages\\system\\components\\RoleEdit.vue"],"sourcesContent":["<!--\r\n * @Author: your name\r\n * @Date: 2021-02-09 15:24:23\r\n * @LastEditTime: 2022-04-28 19:04:23\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\vue3-element-admin\\src\\views\\layoutpages\\system\\components\\usersEdit.vue\r\n-->\r\n<template>\r\n    <el-dialog\r\n        :title=\"title\"\r\n        append-to-body\r\n        destroy-on-close\r\n        :model-value=\"showDialog\"\r\n        @close=\"closeDialog()\"\r\n    >\r\n        <!-- <span>{{ rowData }}</span> -->\r\n        <!-- 表单 -->\r\n        <el-form\r\n            :model=\"form\"\r\n            ref=\"formRef\"\r\n            :rules=\"rules\"\r\n            label-width=\"80px\"\r\n            :inline=\"false\"\r\n        >\r\n            <el-form-item label=\"名称\" prop=\"name\">\r\n                <el-input v-model=\"name\" placeholder=\"\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"角色名\" prop=\"roleName\">\r\n                <el-input\r\n                    v-model=\"roleName\"\r\n                    placeholder=\"\"\r\n                    clearable\r\n                ></el-input>\r\n            </el-form-item>\r\n            <el-form-item class=\"ve_role_item\" label=\"权限\" prop=\"role\">\r\n                <el-card\r\n                    shadow=\"never\"\r\n                    :body-style=\"{ padding: 0, height: '200px' }\"\r\n                >\r\n                    <el-scrollbar>\r\n                        <el-tree\r\n                            ref=\"tree\"\r\n                            :data=\"menuList\"\r\n                            node-key=\"id\"\r\n                            default-expand-all\r\n                            :props=\"{ label: 'name' }\"\r\n                            empty-text=\"暂无数据\"\r\n                            show-checkbox\r\n                            highlight-current\r\n                        >\r\n                            <template v-slot=\"{ data }\">\r\n                                <span\r\n                                    :data-roleId=\"data.id\"\r\n                                    :class=\"{ ve_tree_item: data.type == 2 }\"\r\n                                >\r\n                                    {{ data.name }}\r\n                                </span>\r\n                            </template>\r\n                        </el-tree>\r\n                    </el-scrollbar>\r\n                    <!-- card body -->\r\n                </el-card>\r\n            </el-form-item>\r\n            <el-form-item label=\"状态\" prop=\"status\">\r\n                <el-radio-group v-model=\"status\">\r\n                    <el-radio-button :label=\"1\">启用</el-radio-button>\r\n                    <el-radio-button :label=\"0\">停用</el-radio-button>\r\n                </el-radio-group>\r\n            </el-form-item>\r\n        </el-form>\r\n\r\n        <template v-slot:footer>\r\n            <span>\r\n                <el-button @click=\"closeDialog()\">取消</el-button>\r\n                <el-button type=\"primary\" @click=\"onSubmit()\">确定</el-button>\r\n            </span>\r\n        </template>\r\n    </el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted, reactive, ref, toRefs, nextTick } from \"vue\";\r\nimport { treeFindPath } from \"@/utils\";\r\n\r\nconst props = defineProps({\r\n    showDialog: {\r\n        type: Boolean,\r\n        default: true,\r\n    },\r\n    title: {\r\n        type: String,\r\n        default: \"添加\",\r\n    },\r\n    rowData: {\r\n        type: Object,\r\n        default: null,\r\n    },\r\n});\r\nconst emit = defineEmits([\"closeDialog\"]);\r\nconst { title, rowData } = toRefs(props);\r\nconst closeDialog = () => {\r\n    emit(\"closeDialog\", false);\r\n};\r\nconst form = reactive({\r\n    roleName: \"\",\r\n    name: \"\",\r\n    role: [],\r\n    status: 1,\r\n});\r\nconst { roleName, name, role, status } = toRefs(form);\r\nconst formRef = ref(null);\r\nconst rules = {\r\n    name: [\r\n        {\r\n            required: true,\r\n            message: \"请输入名称\",\r\n            trigger: \"blur\",\r\n        },\r\n    ],\r\n    roleName: [\r\n        {\r\n            required: true,\r\n            message: \"请输入角色名\",\r\n            trigger: \"blur\",\r\n        },\r\n    ],\r\n    role: [\r\n        {\r\n            validator: (rule, value, callback) => {\r\n                role.value = [\r\n                    ...tree.value.getCheckedNodes(),\r\n                    ...tree.value.getHalfCheckedNodes(),\r\n                ];\r\n                if (role.value.length < 1) {\r\n                    callback(new Error(\"请选择权限\"));\r\n                } else {\r\n                    callback();\r\n                }\r\n            },\r\n            required: true,\r\n        },\r\n    ],\r\n};\r\nconst tree = ref(null);\r\nconst menuList = ref([]);\r\n/**\r\n * @description: 数据初始化\r\n * @param {*}\r\n * @return {*}\r\n */\r\nrowData.value &&\r\n    ((name.value = rowData.value.name),\r\n    (roleName.value = rowData.value.roleName),\r\n    (status.value = rowData.value.status));\r\n/**\r\n * @description:提交\r\n * @param {*}\r\n * @return {*}\r\n */\r\nconst onSubmit = () => {\r\n    formRef.value.validate(async (valid) => {\r\n        if (valid) {\r\n            let res;\r\n            if (title.value == \"添加\") {\r\n                res = await VE_API.system.roleAdd(form);\r\n            } else {\r\n                res = await VE_API.system.roleEdit({\r\n                    id: rowData.value.id,\r\n                    ...form,\r\n                });\r\n            }\r\n            const { code } = res;\r\n            if (code == \"00\") {\r\n                closeDialog();\r\n            }\r\n        } else {\r\n            console.log(\"error submit!!\");\r\n            return false;\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * @description: 获取菜单数据\r\n * @param {*}\r\n * @return {*}\r\n */\r\nconst getMenuList = async () => {\r\n    const { code, data } = await VE_API.system.menuList(\r\n        {\r\n            limit: 10,\r\n            page: 1,\r\n            total: 0,\r\n        },\r\n        { Global: false }\r\n    );\r\n    if (code == \"00\") {\r\n        const list = XE.mapTree(\r\n            XE.toArrayTree(data, {\r\n                sortKey: \"sort\",\r\n            }),\r\n            (item) => {\r\n                if (item.children.length <= 0) {\r\n                    delete item.children;\r\n                }\r\n                return item;\r\n            }\r\n        );\r\n        menuList.value = list;\r\n    }\r\n};\r\n\r\n/**\r\n * @description:改变按钮的排列样式\r\n * @param {*}\r\n * @return {*}\r\n */\r\nconst setMenuStyle = () => {\r\n    let eles = document.getElementsByClassName(\"ve_tree_item\");\r\n    Array.from(eles).forEach((e) => {\r\n        const roleId = e.dataset.roleid * 1;\r\n        const index =\r\n            treeFindPath(menuList.value, (item) => item.id == roleId).length -\r\n            1;\r\n        e.parentNode.parentNode.parentNode.style.paddingLeft =\r\n            index * 18 + \"px\";\r\n        let oldClass = e.parentNode.className;\r\n        e.parentNode.className = oldClass + \" fl p0\";\r\n    });\r\n};\r\nonMounted(async () => {\r\n    await getMenuList();\r\n    nextTick(() => {\r\n        setMenuStyle();\r\n        if (title.value == \"添加\") {\r\n            tree.value.setCheckedNodes(menuList.value);\r\n        } else {\r\n            let _list = XE.toTreeArray(\r\n                XE.toArrayTree(rowData.value.role)\r\n            ).filter((item) => item.children.length < 1);\r\n            tree.value.setCheckedNodes(_list);\r\n        }\r\n    });\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\">\r\nbody {\r\n    .ve_role_item {\r\n        .el-form-item__content {\r\n            display: block !important;\r\n        }\r\n    }\r\n}\r\n.fl {\r\n    float: left;\r\n}\r\n.p0 {\r\n    padding: 0 !important;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}