{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, withModifiers as _withModifiers, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-79991c0a\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  id: \"ve_puzzle\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  class: \"ve_button\"\n};\nconst _hoisted_4 = {\n  class: \"ve_game_button\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\"重新开始\");\n\nconst _hoisted_6 = {\n  class: \"ve_upload\"\n};\n\nconst _hoisted_7 = /*#__PURE__*/_createTextVNode(\"用我的萌照\");\n\nimport { ref, onBeforeUpdate } from \"vue\";\nconst __default__ = {\n  data: () => ({\n    description: \"拼图小游戏\"\n  })\n};\nexport default /*#__PURE__*/Object.assign(__default__, {\n  __name: 'Game',\n\n  setup(__props) {\n    let url = require(\"../../../assets/logo.png\");\n\n    const img = ref(url);\n    const show_img = ref(false);\n    const txt = ref(\"查看原图\");\n    const divs = ref([]);\n    const arr = ref([]);\n    const success = ref(false); //游戏状态\n\n    /**\r\n     * @description:换图片\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n    const onChange = file => {\n      img.value = URL.createObjectURL(file.raw);\n      get_nums(); // console.log(URL.createObjectURL(file.raw));\n    };\n    /**\r\n     * @description: 查看原图\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n\n    const see_img = () => {\n      show_img.value = !show_img.value;\n      txt.value = show_img.value ? \"继续游戏\" : \"查看原图\";\n    };\n    /**\r\n     * @description:初始化,生成1-16的16个随机排列的数字\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n\n    const get_nums = () => {\n      txt.value = \"查看原图\";\n      show_img.value = false;\n      success.value = false;\n      arr.value.length = 0;\n\n      for (let i = 1; i < 16; i++) {\n        arr.value.push(i);\n      } // eslint-disable-next-line no-constant-condition\n\n\n      while (true) {\n        arr.value.sort(() => 0.5 - Math.random());\n\n        if (check_nums(arr.value)) {\n          break;\n        }\n      }\n\n      arr.value.push(16);\n    };\n    /**\r\n     * @description: 检查打乱后的数组是否合理\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n\n    const check_nums = arr => {\n      let count = 0;\n\n      for (let i = 0; i < 15; i++) {\n        for (let j = i + 1; j < 15; j++) {\n          if (arr[j] < arr[i]) {\n            count++;\n          }\n        }\n      }\n\n      return count % 2 === 0;\n    };\n    /**\r\n     * @description:检查是否拼图成功\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n\n    const check_finish = () => {\n      let bool = arr.value.every((item, i) => {\n        return item == i + 1;\n      });\n      bool && (success.value = true);\n    };\n    /**\r\n     * @description:图片点击事件,移动图片\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n\n    const move_img = (i, e) => {\n      let top = e.target.offsetTop;\n      let left = e.target.offsetLeft;\n      let top_16 = divs.value[15].offsetTop;\n      let left_16 = divs.value[15].offsetLeft;\n      let x = Math.abs(left - left_16);\n      let y = Math.abs(top - top_16);\n\n      if (x == 100 && top == top_16 || y == 100 && left == left_16) {\n        let a = arr.value[15];\n        arr.value[15] = arr.value[i];\n        arr.value[i] = a;\n        check_finish();\n      }\n    };\n\n    get_nums(); // 确保在每次更新之前重置ref\n\n    onBeforeUpdate(() => {\n      divs.value = [];\n    });\n    return (_ctx, _cache) => {\n      const _component_el_button = _resolveComponent(\"el-button\");\n\n      const _component_el_col = _resolveComponent(\"el-col\");\n\n      const _component_el_row = _resolveComponent(\"el-row\");\n\n      const _component_el_upload = _resolveComponent(\"el-upload\");\n\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n        class: \"ve_artwork\",\n        style: _normalizeStyle({\n          backgroundImage: show_img.value || success.value ? `url(${img.value})` : 'none'\n        })\n      }, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList(16, i => {\n        return _createElementVNode(\"div\", {\n          key: i,\n          class: _normalizeClass(['ve_item_box', `pic${i}`, `img${arr.value[i - 1]}`, show_img.value || success.value ? 've_show_img' : '', success.value && i == 16 ? 've_finish' : '']),\n          style: _normalizeStyle({\n            backgroundImage: i == 16 ? success.value ? `url(${img.value})` : 'none' : `url(${img.value})`\n          }),\n          ref_for: true,\n          ref: el => {\n            if (el) divs.value[i - 1] = el;\n          },\n          onClick: _withModifiers($event => move_img(i - 1, $event), [\"self\", \"stop\"])\n        }, null, 14, _hoisted_2);\n      }), 64))], 4), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_row, {\n        gutter: 10\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_col, {\n          span: 12,\n          offset: 0\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            type: \"primary\",\n            onClick: _cache[0] || (_cache[0] = $event => get_nums()),\n            style: {\n              \"width\": \"100%\"\n            }\n          }, {\n            default: _withCtx(() => [_hoisted_5]),\n            _: 1\n          })]),\n          _: 1\n        }), _createVNode(_component_el_col, {\n          span: 12,\n          offset: 0\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            style: {\n              \"width\": \"100%\"\n            },\n            type: show_img.value ? 'success' : 'info',\n            onClick: _cache[1] || (_cache[1] = $event => see_img()),\n            disabled: success.value\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(txt.value), 1)]),\n            _: 1\n          }, 8, [\"type\", \"disabled\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_el_upload, {\n        style: {\n          \"width\": \"100%\"\n        },\n        action: \"\",\n        accept: \"image/png, image/jpeg\",\n        ref: \"upload\",\n        \"on-change\": onChange,\n        \"auto-upload\": false,\n        \"show-file-list\": false\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          style: {\n            \"width\": \"100%\"\n          },\n          type: \"danger\"\n        }, {\n          default: _withCtx(() => [_hoisted_7]),\n          _: 1\n        })]),\n        _: 1\n      }, 512)])])]);\n    };\n  }\n\n});","map":null,"metadata":{},"sourceType":"module"}