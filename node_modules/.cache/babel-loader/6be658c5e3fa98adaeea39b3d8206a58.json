{"ast":null,"code":"import { unref as _unref, resolveComponent as _resolveComponent, isRef as _isRef, createVNode as _createVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveDirective as _resolveDirective, openBlock as _openBlock, createBlock as _createBlock, withDirectives as _withDirectives, resolveDynamicComponent as _resolveDynamicComponent, createElementVNode as _createElementVNode, Fragment as _Fragment, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"ve_container\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"重置\");\n\nconst _hoisted_3 = {\n  style: {\n    \"vertical-align\": \"middle\"\n  }\n};\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = {\n  key: 0,\n  style: {\n    \"font-weight\": \"bold\"\n  }\n};\nconst _hoisted_6 = {\n  key: 1\n};\nconst _hoisted_7 = {\n  key: 1\n};\nconst _hoisted_8 = {\n  key: 1\n};\nconst _hoisted_9 = {\n  key: 1\n};\nconst _hoisted_10 = {\n  key: 2\n};\nimport { isURL } from \"@/utils/validate\";\nimport MenuEdit from \"./components/MenuEdit\";\nimport { reactive, toRefs, ref, onMounted, getCurrentInstance } from \"vue\"; //?导入公共查询方法\n\nimport { onSubmit, resetForm, handleSizeChange, handleCurrentChange } from \"@/views/layoutpages/common\";\nconst __default__ = {\n  data: () => ({\n    description: \"菜单查询与设置\",\n    menus: {\n      search: {\n        name: \"查询\"\n      },\n      add: {\n        name: \"添加\"\n      },\n      edit: {\n        name: \"编辑\"\n      },\n      del: {\n        name: \"删除\"\n      },\n      addChild: {\n        name: \"添加子级\"\n      },\n      addBtn: {\n        name: \"添加按钮\"\n      }\n    }\n  })\n};\nexport default /*#__PURE__*/Object.assign(__default__, {\n  __name: 'Menus',\n\n  setup(__props) {\n    const {\n      proxy\n    } = getCurrentInstance();\n    const queryForm = ref(null);\n    const dialogTitle = ref(\"\");\n    const showDialog = ref(false);\n    const rowData = ref(null);\n    const tableData = ref([]);\n    const params = reactive({\n      name: \"\",\n      limit: 10,\n      page: 1,\n      total: 0\n    });\n    const {\n      name,\n      limit,\n      page,\n      total\n    } = toRefs(params);\n    /**\r\n     * @description:添加or编辑事件\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n    const handleEdit = (title, row = null) => {\n      showDialog.value = true;\n      dialogTitle.value = title;\n      rowData.value = row;\n    };\n    /**\r\n     * @description: dialog事件\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n\n    const handelDialog = e => {\n      showDialog.value = e;\n      getDataList();\n    };\n    /**删除行数据\r\n     * @description:\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n\n    const handleDel = id => {\n      proxy.$confirm(\"此操作将永久删除该数据, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"error\"\n      }).then(async () => {\n        const {\n          code\n        } = await VE_API.system.menuDel({\n          id\n        });\n\n        if (code == \"00\") {\n          getDataList();\n        }\n      }).catch(() => {\n        proxy.$message({\n          type: \"info\",\n          message: \"已取消删除\"\n        });\n      });\n    };\n    /**\r\n     * @description: 获取列表数据\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n\n    const getDataList = async () => {\n      const {\n        code,\n        data\n      } = await VE_API.system.menuList(params);\n\n      if (code == \"00\") {\n        const list = XE.mapTree(XE.toArrayTree(data, {\n          sortKey: \"sort\"\n        }), item => {\n          if (item.children && item.children.length <= 0) {\n            delete item.children;\n          }\n\n          return item;\n        });\n        tableData.value = list;\n      }\n    };\n\n    onMounted(async () => {\n      await getDataList(); // maxHeight(pagination, queryForm, toolBar, ve_max_height);\n    });\n    return (_ctx, _cache) => {\n      const _component_el_input = _resolveComponent(\"el-input\");\n\n      const _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n      const _component_el_button = _resolveComponent(\"el-button\");\n\n      const _component_el_form = _resolveComponent(\"el-form\");\n\n      const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n      const _component_el_icon = _resolveComponent(\"el-icon\");\n\n      const _component_el_tag = _resolveComponent(\"el-tag\");\n\n      const _component_el_link = _resolveComponent(\"el-link\");\n\n      const _component_ve_table = _resolveComponent(\"ve-table\");\n\n      const _directive_permission = _resolveDirective(\"permission\");\n\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_form, {\n        ref_key: \"queryForm\",\n        ref: queryForm,\n        inline: true,\n        model: params\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_form_item, {\n          label: \"名称\",\n          prop: \"name\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            clearable: \"\",\n            modelValue: _unref(name),\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _isRef(name) ? name.value = $event : null),\n            placeholder: \"名称\"\n          }, null, 8, [\"modelValue\"])]),\n          _: 1\n        }), _createVNode(_component_el_form_item, null, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            type: \"primary\",\n            onClick: _cache[1] || (_cache[1] = $event => _unref(onSubmit)(params, getDataList))\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.menus.search.name), 1)]),\n            _: 1\n          }), _createVNode(_component_el_button, {\n            onClick: _cache[2] || (_cache[2] = $event => _unref(resetForm)(queryForm.value, params, getDataList))\n          }, {\n            default: _withCtx(() => [_hoisted_2]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      }, 8, [\"model\"]), _createVNode(_component_ve_table, {\n        table: {\n          data: tableData.value,\n          rowKey: 'id',\n          defaultExpandAll: true\n        },\n        pagination: {\n          hideOnSinglePage: true,\n          onSizeChange: val => _unref(handleSizeChange)(val, params, getDataList),\n          onCurrentChange: val => _unref(handleCurrentChange)(val, params, getDataList),\n          currentPage: _unref(page),\n          pageSize: _unref(limit),\n          total: _unref(total)\n        }\n      }, {\n        tool_bar: _withCtx(() => [_withDirectives((_openBlock(), _createBlock(_component_el_button, {\n          size: \"small\",\n          type: \"primary\",\n          onClick: _cache[3] || (_cache[3] = $event => handleEdit(_ctx.menus.add.name))\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.menus.add.name), 1)]),\n          _: 1\n        })), [[_directive_permission, ['add']]])]),\n        default: _withCtx(() => [_createVNode(_component_el_table_column, {\n          prop: \"name\",\n          label: \"名称\"\n        }), _createVNode(_component_el_table_column, {\n          prop: \"icon\",\n          label: \"图标\"\n        }, {\n          default: _withCtx(({\n            row\n          }) => [row.type !== 2 ? (_openBlock(), _createElementBlock(_Fragment, {\n            key: 0\n          }, [_createVNode(_component_el_icon, {\n            style: {\n              \"margin-right\": \"6px\",\n              \"vertical-align\": \"middle\"\n            }\n          }, {\n            default: _withCtx(() => [(_openBlock(), _createBlock(_resolveDynamicComponent(row.icon)))]),\n            _: 2\n          }, 1024), _createElementVNode(\"span\", _hoisted_3, _toDisplayString(row.icon), 1)], 64)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_4, \"/\"))]),\n          _: 1\n        }), _createVNode(_component_el_table_column, {\n          prop: \"type\",\n          label: \"类型\"\n        }, {\n          default: _withCtx(({\n            row\n          }) => [_createVNode(_component_el_tag, {\n            type: row.type == 0 ? '' : row.type == 1 ? 'success' : 'warning'\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(row.type == 0 ? \"目录\" : row.type == 1 ? \"菜单\" : \"按钮\"), 1)]),\n            _: 2\n          }, 1032, [\"type\"])]),\n          _: 1\n        }), _createVNode(_component_el_table_column, {\n          prop: \"sort\",\n          label: \"排序\"\n        }, {\n          default: _withCtx(({\n            row\n          }) => [row.type !== 2 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, _toDisplayString(row.sort), 1)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_6, \"/\"))]),\n          _: 1\n        }), _createVNode(_component_el_table_column, {\n          prop: \"iframe\",\n          label: \"Iframe\"\n        }, {\n          default: _withCtx(({\n            row\n          }) => [row.type == 1 ? (_openBlock(), _createBlock(_component_el_tag, {\n            key: 0,\n            type: row.iframe == 0 ? 'danger' : '',\n            effect: \"dark\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(row.iframe == 0 ? \"否\" : \"是\"), 1)]),\n            _: 2\n          }, 1032, [\"type\"])) : (_openBlock(), _createElementBlock(\"span\", _hoisted_7, \"/\"))]),\n          _: 1\n        }), _createVNode(_component_el_table_column, {\n          prop: \"url\",\n          label: \"URL/标识\",\n          \"show-overflow-tooltip\": \"\"\n        }, {\n          default: _withCtx(({\n            row\n          }) => [row.type == 1 ? (_openBlock(), _createElementBlock(_Fragment, {\n            key: 0\n          }, [_unref(isURL)(row.url) ? (_openBlock(), _createBlock(_component_el_link, {\n            key: 0,\n            type: \"primary\",\n            href: row.url,\n            target: \"_blank\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(row.url), 1)]),\n            _: 2\n          }, 1032, [\"href\"])) : (_openBlock(), _createElementBlock(\"span\", _hoisted_8, _toDisplayString(row.url), 1))], 64)) : row.type == 2 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_9, _toDisplayString(row.menu), 1)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_10, \"/\"))]),\n          _: 1\n        }), _createVNode(_component_el_table_column, {\n          fixed: \"right\",\n          label: \"操作\",\n          width: \"240\"\n        }, {\n          default: _withCtx(({\n            row\n          }) => [_withDirectives((_openBlock(), _createBlock(_component_el_button, {\n            onClick: _withModifiers($event => handleEdit(_ctx.menus.edit.name, row), [\"prevent\"]),\n            type: \"primary\",\n            size: \"small\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.menus.edit.name), 1)]),\n            _: 2\n          }, 1032, [\"onClick\"])), [[_directive_permission, ['edit']]]), _withDirectives((_openBlock(), _createBlock(_component_el_button, {\n            onClick: _withModifiers($event => handleDel(row.id), [\"prevent\"]),\n            type: \"danger\",\n            size: \"small\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.menus.del.name), 1)]),\n            _: 2\n          }, 1032, [\"onClick\"])), [[_directive_permission, ['del']]]), row.type == 0 ? _withDirectives((_openBlock(), _createBlock(_component_el_button, {\n            key: 0,\n            onClick: _withModifiers($event => handleEdit(_ctx.menus.addChild.name, row), [\"prevent\"]),\n            type: \"warning\",\n            size: \"small\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.menus.addChild.name), 1)]),\n            _: 2\n          }, 1032, [\"onClick\"])), [[_directive_permission, ['addChild']]]) : _createCommentVNode(\"\", true), row.type == 1 && row.iframe == 0 ? _withDirectives((_openBlock(), _createBlock(_component_el_button, {\n            key: 1,\n            onClick: _withModifiers($event => handleEdit(_ctx.menus.addBtn.name, row), [\"prevent\"]),\n            type: \"success\",\n            size: \"small\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.menus.addBtn.name), 1)]),\n            _: 2\n          }, 1032, [\"onClick\"])), [[_directive_permission, ['addBtn']]]) : _createCommentVNode(\"\", true)]),\n          _: 1\n        })]),\n        _: 1\n      }, 8, [\"table\", \"pagination\"]), showDialog.value ? (_openBlock(), _createBlock(_unref(MenuEdit), {\n        key: 0,\n        menuList: tableData.value,\n        rowData: rowData.value,\n        title: dialogTitle.value,\n        showDialog: showDialog.value,\n        onCloseDialog: _cache[4] || (_cache[4] = $event => handelDialog($event))\n      }, null, 8, [\"menuList\", \"rowData\", \"title\", \"showDialog\"])) : _createCommentVNode(\"\", true)]);\n    };\n  }\n\n});","map":null,"metadata":{},"sourceType":"module"}