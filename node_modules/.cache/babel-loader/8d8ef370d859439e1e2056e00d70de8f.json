{"ast":null,"code":"import { isURL } from \"@/utils/validate\";\nimport MenuEdit from \"./components/MenuEdit\";\nimport { reactive, toRefs, ref, onMounted, getCurrentInstance } from \"vue\"; //?导入公共查询方法\n\nimport { onSubmit, resetForm, handleSizeChange, handleCurrentChange } from \"@/views/layoutpages/common\";\nconst __default__ = {\n  data: () => ({\n    description: \"菜单查询与设置\",\n    menus: {\n      search: {\n        name: \"查询\"\n      },\n      add: {\n        name: \"添加\"\n      },\n      edit: {\n        name: \"编辑\"\n      },\n      del: {\n        name: \"删除\"\n      },\n      addChild: {\n        name: \"添加子级\"\n      },\n      addBtn: {\n        name: \"添加按钮\"\n      }\n    }\n  })\n};\nexport default /*#__PURE__*/Object.assign(__default__, {\n  __name: 'Menus',\n\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const {\n      proxy\n    } = getCurrentInstance();\n    const queryForm = ref(null);\n    const dialogTitle = ref(\"\");\n    const showDialog = ref(false);\n    const rowData = ref(null);\n    const tableData = ref([]);\n    const params = reactive({\n      name: \"\",\n      limit: 10,\n      page: 1,\n      total: 0\n    });\n    const {\n      name,\n      limit,\n      page,\n      total\n    } = toRefs(params);\n    /**\r\n     * @description:添加or编辑事件\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n    const handleEdit = (title, row = null) => {\n      showDialog.value = true;\n      dialogTitle.value = title;\n      rowData.value = row;\n    };\n    /**\r\n     * @description: dialog事件\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n\n    const handelDialog = e => {\n      showDialog.value = e;\n      getDataList();\n    };\n    /**删除行数据\r\n     * @description:\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n\n    const handleDel = id => {\n      proxy.$confirm(\"此操作将永久删除该数据, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"error\"\n      }).then(async () => {\n        const {\n          code\n        } = await VE_API.system.menuDel({\n          id\n        });\n\n        if (code == \"00\") {\n          getDataList();\n        }\n      }).catch(() => {\n        proxy.$message({\n          type: \"info\",\n          message: \"已取消删除\"\n        });\n      });\n    };\n    /**\r\n     * @description: 获取列表数据\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n\n    const getDataList = async () => {\n      const {\n        code,\n        data\n      } = await VE_API.system.menuList(params);\n\n      if (code == \"00\") {\n        const list = XE.mapTree(XE.toArrayTree(data, {\n          sortKey: \"sort\"\n        }), item => {\n          if (item.children && item.children.length <= 0) {\n            delete item.children;\n          }\n\n          return item;\n        });\n        tableData.value = list;\n      }\n    };\n\n    onMounted(async () => {\n      await getDataList(); // maxHeight(pagination, queryForm, toolBar, ve_max_height);\n    });\n    const __returned__ = {\n      proxy,\n      queryForm,\n      dialogTitle,\n      showDialog,\n      rowData,\n      tableData,\n      params,\n      name,\n      limit,\n      page,\n      total,\n      handleEdit,\n      handelDialog,\n      handleDel,\n      getDataList,\n      isURL,\n      MenuEdit,\n      reactive,\n      toRefs,\n      ref,\n      onMounted,\n      getCurrentInstance,\n      onSubmit,\n      resetForm,\n      handleSizeChange,\n      handleCurrentChange\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n});","map":{"version":3,"mappings":"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","names":["isURL","MenuEdit","reactive","toRefs","ref","onMounted","getCurrentInstance","onSubmit","resetForm","handleSizeChange","handleCurrentChange","data","description","menus","search","name","add","edit","del","addChild","addBtn","proxy","queryForm","dialogTitle","showDialog","rowData","tableData","params","limit","page","total","handleEdit","title","row","value","handelDialog","e","getDataList","handleDel","id","$confirm","confirmButtonText","cancelButtonText","type","then","code","VE_API","system","menuDel","catch","$message","message","menuList","list","XE","mapTree","toArrayTree","sortKey","item","children","length"],"sources":["C:/Users/Administrator/Desktop/vue3-element-admin-dev/src/views/layoutpages/system/Menus.vue"],"sourcesContent":["<template>\r\n    <div class=\"ve_container\">\r\n        <!-- 搜索 -->\r\n        <el-form ref=\"queryForm\" :inline=\"true\" :model=\"params\">\r\n            <el-form-item label=\"名称\" prop=\"name\">\r\n                <el-input clearable v-model=\"name\" placeholder=\"名称\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-button type=\"primary\" @click=\"onSubmit(params, getDataList)\">\r\n                    {{ menus.search.name }}\r\n                </el-button>\r\n                <el-button @click=\"resetForm(queryForm, params, getDataList)\">重置</el-button>\r\n            </el-form-item>\r\n        </el-form>\r\n\r\n        <!-- 列表 -->\r\n        <ve-table\r\n            :table=\"{\r\n                data: tableData,\r\n                rowKey: 'id',\r\n                defaultExpandAll: true,\r\n            }\"\r\n            :pagination=\"{\r\n                hideOnSinglePage: true,\r\n                onSizeChange: (val) => handleSizeChange(val, params, getDataList),\r\n                onCurrentChange: (val) => handleCurrentChange(val, params, getDataList),\r\n                currentPage: page,\r\n                pageSize: limit,\r\n                total: total,\r\n            }\"\r\n        >\r\n            <template #tool_bar>\r\n                <el-button v-permission=\"['add']\" size=\"small\" type=\"primary\" @click=\"handleEdit(menus.add.name)\">\r\n                    {{ menus.add.name }}\r\n                </el-button>\r\n            </template>\r\n            <el-table-column prop=\"name\" label=\"名称\"></el-table-column>\r\n            <el-table-column prop=\"icon\" label=\"图标\">\r\n                <template v-slot=\"{ row }\">\r\n                    <template v-if=\"row.type !== 2\">\r\n                        <el-icon style=\"margin-right: 6px; vertical-align: middle\">\r\n                            <component :is=\"row.icon\" />\r\n                        </el-icon>\r\n                        <span style=\"vertical-align: middle\">\r\n                            {{ row.icon }}\r\n                        </span>\r\n                    </template>\r\n                    <span v-else>/</span>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"type\" label=\"类型\">\r\n                <template v-slot=\"{ row }\">\r\n                    <el-tag :type=\"row.type == 0 ? '' : row.type == 1 ? 'success' : 'warning'\">\r\n                        {{ row.type == 0 ? \"目录\" : row.type == 1 ? \"菜单\" : \"按钮\" }}\r\n                    </el-tag>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"sort\" label=\"排序\">\r\n                <template v-slot=\"{ row }\">\r\n                    <span v-if=\"row.type !== 2\" style=\"font-weight: bold\">\r\n                        {{ row.sort }}\r\n                    </span>\r\n                    <span v-else>/</span>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"iframe\" label=\"Iframe\">\r\n                <template v-slot=\"{ row }\">\r\n                    <el-tag v-if=\"row.type == 1\" :type=\"row.iframe == 0 ? 'danger' : ''\" effect=\"dark\">\r\n                        {{ row.iframe == 0 ? \"否\" : \"是\" }}\r\n                    </el-tag>\r\n                    <span v-else>/</span>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"url\" label=\"URL/标识\" show-overflow-tooltip>\r\n                <template v-slot=\"{ row }\">\r\n                    <template v-if=\"row.type == 1\">\r\n                        <el-link v-if=\"isURL(row.url)\" type=\"primary\" :href=\"row.url\" target=\"_blank\">\r\n                            {{ row.url }}\r\n                        </el-link>\r\n                        <span v-else>{{ row.url }}</span>\r\n                    </template>\r\n                    <span v-else-if=\"row.type == 2\">{{ row.menu }}</span>\r\n                    <span v-else>/</span>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column fixed=\"right\" label=\"操作\" width=\"240\">\r\n                <template v-slot:default=\"{ row }\">\r\n                    <el-button v-permission=\"['edit']\" @click.prevent=\"handleEdit(menus.edit.name, row)\" type=\"primary\" size=\"small\">\r\n                        {{ menus.edit.name }}\r\n                    </el-button>\r\n                    <el-button v-permission=\"['del']\" @click.prevent=\"handleDel(row.id)\" type=\"danger\" size=\"small\">\r\n                        {{ menus.del.name }}\r\n                    </el-button>\r\n                    <el-button v-permission=\"['addChild']\" v-if=\"row.type == 0\" @click.prevent=\"handleEdit(menus.addChild.name, row)\" type=\"warning\" size=\"small\">\r\n                        {{ menus.addChild.name }}\r\n                    </el-button>\r\n                    <el-button v-permission=\"['addBtn']\" v-if=\"row.type == 1 && row.iframe == 0\" @click.prevent=\"handleEdit(menus.addBtn.name, row)\" type=\"success\" size=\"small\">\r\n                        {{ menus.addBtn.name }}\r\n                    </el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </ve-table>\r\n\r\n        <!-- 编辑组件 -->\r\n        <menu-edit v-if=\"showDialog\" :menuList=\"tableData\" :rowData=\"rowData\" :title=\"dialogTitle\" :showDialog=\"showDialog\" @closeDialog=\"handelDialog($event)\" />\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    data: () => ({\r\n        description: \"菜单查询与设置\",\r\n        menus: {\r\n            search: { name: \"查询\" },\r\n            add: { name: \"添加\" },\r\n            edit: { name: \"编辑\" },\r\n            del: { name: \"删除\" },\r\n            addChild: { name: \"添加子级\" },\r\n            addBtn: { name: \"添加按钮\" },\r\n        },\r\n    }),\r\n};\r\n</script>\r\n\r\n<script setup>\r\nimport { isURL } from \"@/utils/validate\";\r\nimport MenuEdit from \"./components/MenuEdit\";\r\nimport { reactive, toRefs, ref, onMounted, getCurrentInstance } from \"vue\";\r\n//?导入公共查询方法\r\nimport { onSubmit, resetForm, handleSizeChange, handleCurrentChange } from \"@/views/layoutpages/common\";\r\n\r\nconst { proxy } = getCurrentInstance();\r\n\r\nconst queryForm = ref(null);\r\nconst dialogTitle = ref(\"\");\r\nconst showDialog = ref(false);\r\nconst rowData = ref(null);\r\nconst tableData = ref([]);\r\nconst params = reactive({\r\n    name: \"\",\r\n    limit: 10,\r\n    page: 1,\r\n    total: 0,\r\n});\r\nconst { name, limit, page, total } = toRefs(params);\r\n\r\n/**\r\n * @description:添加or编辑事件\r\n * @param {*}\r\n * @return {*}\r\n */\r\nconst handleEdit = (title, row = null) => {\r\n    showDialog.value = true;\r\n    dialogTitle.value = title;\r\n    rowData.value = row;\r\n};\r\n/**\r\n * @description: dialog事件\r\n * @param {*}\r\n * @return {*}\r\n */\r\nconst handelDialog = (e) => {\r\n    showDialog.value = e;\r\n    getDataList();\r\n};\r\n/**删除行数据\r\n * @description:\r\n * @param {*}\r\n * @return {*}\r\n */\r\nconst handleDel = (id) => {\r\n    proxy\r\n        .$confirm(\"此操作将永久删除该数据, 是否继续?\", \"提示\", {\r\n            confirmButtonText: \"确定\",\r\n            cancelButtonText: \"取消\",\r\n            type: \"error\",\r\n        })\r\n        .then(async () => {\r\n            const { code } = await VE_API.system.menuDel({ id });\r\n            if (code == \"00\") {\r\n                getDataList();\r\n            }\r\n        })\r\n        .catch(() => {\r\n            proxy.$message({\r\n                type: \"info\",\r\n                message: \"已取消删除\",\r\n            });\r\n        });\r\n};\r\n/**\r\n * @description: 获取列表数据\r\n * @param {*}\r\n * @return {*}\r\n */\r\nconst getDataList = async () => {\r\n    const { code, data } = await VE_API.system.menuList(params);\r\n    if (code == \"00\") {\r\n        const list = XE.mapTree(\r\n            XE.toArrayTree(data, {\r\n                sortKey: \"sort\",\r\n            }),\r\n            (item) => {\r\n                if (item.children && item.children.length <= 0) {\r\n                    delete item.children;\r\n                }\r\n                return item;\r\n            }\r\n        );\r\n        tableData.value = list;\r\n    }\r\n};\r\n\r\nonMounted(async () => {\r\n    await getDataList();\r\n    // maxHeight(pagination, queryForm, toolBar, ve_max_height);\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n"]},"metadata":{},"sourceType":"module"}