{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { onMounted, reactive, ref, toRefs, nextTick } from \"vue\";\nimport { treeFindPath } from \"@/utils\";\nexport default {\n  __name: 'RoleEdit',\n  props: {\n    showDialog: {\n      type: Boolean,\n      default: true\n    },\n    title: {\n      type: String,\n      default: \"添加\"\n    },\n    rowData: {\n      type: Object,\n      default: null\n    }\n  },\n  emits: [\"closeDialog\"],\n\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    expose();\n    const props = __props;\n    const {\n      title,\n      rowData\n    } = toRefs(props);\n\n    const closeDialog = () => {\n      emit(\"closeDialog\", false);\n    };\n\n    const form = reactive({\n      roleName: \"\",\n      name: \"\",\n      role: [],\n      status: 1\n    });\n    const {\n      roleName,\n      name,\n      role,\n      status\n    } = toRefs(form);\n    const formRef = ref(null);\n    const rules = {\n      name: [{\n        required: true,\n        message: \"请输入名称\",\n        trigger: \"blur\"\n      }],\n      roleName: [{\n        required: true,\n        message: \"请输入角色名\",\n        trigger: \"blur\"\n      }],\n      role: [{\n        validator: (rule, value, callback) => {\n          role.value = [...tree.value.getCheckedNodes(), ...tree.value.getHalfCheckedNodes()];\n\n          if (role.value.length < 1) {\n            callback(new Error(\"请选择权限\"));\n          } else {\n            callback();\n          }\n        },\n        required: true\n      }]\n    };\n    const tree = ref(null);\n    const menuList = ref([]);\n    /**\r\n     * @description: 数据初始化\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n    rowData.value && (name.value = rowData.value.name, roleName.value = rowData.value.roleName, status.value = rowData.value.status);\n    /**\r\n     * @description:提交\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n    const onSubmit = () => {\n      formRef.value.validate(async valid => {\n        if (valid) {\n          let res;\n\n          if (title.value == \"添加\") {\n            res = await VE_API.system.roleAdd(form);\n          } else {\n            res = await VE_API.system.roleEdit({\n              id: rowData.value.id,\n              ...form\n            });\n          }\n\n          const {\n            code\n          } = res;\n\n          if (code == \"00\") {\n            closeDialog();\n          }\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    };\n    /**\r\n     * @description: 获取菜单数据\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n\n    const getMenuList = async () => {\n      const {\n        code,\n        data\n      } = await VE_API.system.menuList({\n        limit: 10,\n        page: 1,\n        total: 0\n      }, {\n        Global: false\n      });\n\n      if (code == \"00\") {\n        const list = XE.mapTree(XE.toArrayTree(data, {\n          sortKey: \"sort\"\n        }), item => {\n          if (item.children.length <= 0) {\n            delete item.children;\n          }\n\n          return item;\n        });\n        menuList.value = list;\n      }\n    };\n    /**\r\n     * @description:改变按钮的排列样式\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n\n    const setMenuStyle = () => {\n      let eles = document.getElementsByClassName(\"ve_tree_item\");\n      Array.from(eles).forEach(e => {\n        const roleId = e.dataset.roleid * 1;\n        const index = treeFindPath(menuList.value, item => item.id == roleId).length - 1;\n        e.parentNode.parentNode.parentNode.style.paddingLeft = index * 18 + \"px\";\n        let oldClass = e.parentNode.className;\n        e.parentNode.className = oldClass + \" fl p0\";\n      });\n    };\n\n    onMounted(async () => {\n      await getMenuList();\n      nextTick(() => {\n        setMenuStyle();\n\n        if (title.value == \"添加\") {\n          tree.value.setCheckedNodes(menuList.value);\n        } else {\n          let _list = XE.toTreeArray(XE.toArrayTree(rowData.value.role)).filter(item => item.children.length < 1);\n\n          tree.value.setCheckedNodes(_list);\n        }\n      });\n    });\n    const __returned__ = {\n      props,\n      emit,\n      title,\n      rowData,\n      closeDialog,\n      form,\n      roleName,\n      name,\n      role,\n      status,\n      formRef,\n      rules,\n      tree,\n      menuList,\n      onSubmit,\n      getMenuList,\n      setMenuStyle,\n      onMounted,\n      reactive,\n      ref,\n      toRefs,\n      nextTick,\n      treeFindPath\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"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","names":["onMounted","reactive","ref","toRefs","nextTick","treeFindPath","title","rowData","props","closeDialog","emit","form","roleName","name","role","status","formRef","rules","required","message","trigger","validator","rule","value","callback","tree","getCheckedNodes","getHalfCheckedNodes","length","Error","menuList","onSubmit","validate","valid","res","VE_API","system","roleAdd","roleEdit","id","code","console","log","getMenuList","data","limit","page","total","Global","list","XE","mapTree","toArrayTree","sortKey","item","children","setMenuStyle","eles","document","getElementsByClassName","Array","from","forEach","e","roleId","dataset","roleid","index","parentNode","style","paddingLeft","oldClass","className","setCheckedNodes","_list","toTreeArray","filter"],"sources":["C:/Users/Administrator/Desktop/vue3-element-admin-dev/src/views/layoutpages/system/components/RoleEdit.vue"],"sourcesContent":["<!--\r\n * @Author: your name\r\n * @Date: 2021-02-09 15:24:23\r\n * @LastEditTime: 2022-04-28 19:04:23\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\vue3-element-admin\\src\\views\\layoutpages\\system\\components\\usersEdit.vue\r\n-->\r\n<template>\r\n    <el-dialog\r\n        :title=\"title\"\r\n        append-to-body\r\n        destroy-on-close\r\n        :model-value=\"showDialog\"\r\n        @close=\"closeDialog()\"\r\n    >\r\n        <!-- <span>{{ rowData }}</span> -->\r\n        <!-- 表单 -->\r\n        <el-form\r\n            :model=\"form\"\r\n            ref=\"formRef\"\r\n            :rules=\"rules\"\r\n            label-width=\"80px\"\r\n            :inline=\"false\"\r\n        >\r\n            <el-form-item label=\"名称\" prop=\"name\">\r\n                <el-input v-model=\"name\" placeholder=\"\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"角色名\" prop=\"roleName\">\r\n                <el-input\r\n                    v-model=\"roleName\"\r\n                    placeholder=\"\"\r\n                    clearable\r\n                ></el-input>\r\n            </el-form-item>\r\n            <el-form-item class=\"ve_role_item\" label=\"权限\" prop=\"role\">\r\n                <el-card\r\n                    shadow=\"never\"\r\n                    :body-style=\"{ padding: 0, height: '200px' }\"\r\n                >\r\n                    <el-scrollbar>\r\n                        <el-tree\r\n                            ref=\"tree\"\r\n                            :data=\"menuList\"\r\n                            node-key=\"id\"\r\n                            default-expand-all\r\n                            :props=\"{ label: 'name' }\"\r\n                            empty-text=\"暂无数据\"\r\n                            show-checkbox\r\n                            highlight-current\r\n                        >\r\n                            <template v-slot=\"{ data }\">\r\n                                <span\r\n                                    :data-roleId=\"data.id\"\r\n                                    :class=\"{ ve_tree_item: data.type == 2 }\"\r\n                                >\r\n                                    {{ data.name }}\r\n                                </span>\r\n                            </template>\r\n                        </el-tree>\r\n                    </el-scrollbar>\r\n                    <!-- card body -->\r\n                </el-card>\r\n            </el-form-item>\r\n            <el-form-item label=\"状态\" prop=\"status\">\r\n                <el-radio-group v-model=\"status\">\r\n                    <el-radio-button :label=\"1\">启用</el-radio-button>\r\n                    <el-radio-button :label=\"0\">停用</el-radio-button>\r\n                </el-radio-group>\r\n            </el-form-item>\r\n        </el-form>\r\n\r\n        <template v-slot:footer>\r\n            <span>\r\n                <el-button @click=\"closeDialog()\">取消</el-button>\r\n                <el-button type=\"primary\" @click=\"onSubmit()\">确定</el-button>\r\n            </span>\r\n        </template>\r\n    </el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted, reactive, ref, toRefs, nextTick } from \"vue\";\r\nimport { treeFindPath } from \"@/utils\";\r\n\r\nconst props = defineProps({\r\n    showDialog: {\r\n        type: Boolean,\r\n        default: true,\r\n    },\r\n    title: {\r\n        type: String,\r\n        default: \"添加\",\r\n    },\r\n    rowData: {\r\n        type: Object,\r\n        default: null,\r\n    },\r\n});\r\nconst emit = defineEmits([\"closeDialog\"]);\r\nconst { title, rowData } = toRefs(props);\r\nconst closeDialog = () => {\r\n    emit(\"closeDialog\", false);\r\n};\r\nconst form = reactive({\r\n    roleName: \"\",\r\n    name: \"\",\r\n    role: [],\r\n    status: 1,\r\n});\r\nconst { roleName, name, role, status } = toRefs(form);\r\nconst formRef = ref(null);\r\nconst rules = {\r\n    name: [\r\n        {\r\n            required: true,\r\n            message: \"请输入名称\",\r\n            trigger: \"blur\",\r\n        },\r\n    ],\r\n    roleName: [\r\n        {\r\n            required: true,\r\n            message: \"请输入角色名\",\r\n            trigger: \"blur\",\r\n        },\r\n    ],\r\n    role: [\r\n        {\r\n            validator: (rule, value, callback) => {\r\n                role.value = [\r\n                    ...tree.value.getCheckedNodes(),\r\n                    ...tree.value.getHalfCheckedNodes(),\r\n                ];\r\n                if (role.value.length < 1) {\r\n                    callback(new Error(\"请选择权限\"));\r\n                } else {\r\n                    callback();\r\n                }\r\n            },\r\n            required: true,\r\n        },\r\n    ],\r\n};\r\nconst tree = ref(null);\r\nconst menuList = ref([]);\r\n/**\r\n * @description: 数据初始化\r\n * @param {*}\r\n * @return {*}\r\n */\r\nrowData.value &&\r\n    ((name.value = rowData.value.name),\r\n    (roleName.value = rowData.value.roleName),\r\n    (status.value = rowData.value.status));\r\n/**\r\n * @description:提交\r\n * @param {*}\r\n * @return {*}\r\n */\r\nconst onSubmit = () => {\r\n    formRef.value.validate(async (valid) => {\r\n        if (valid) {\r\n            let res;\r\n            if (title.value == \"添加\") {\r\n                res = await VE_API.system.roleAdd(form);\r\n            } else {\r\n                res = await VE_API.system.roleEdit({\r\n                    id: rowData.value.id,\r\n                    ...form,\r\n                });\r\n            }\r\n            const { code } = res;\r\n            if (code == \"00\") {\r\n                closeDialog();\r\n            }\r\n        } else {\r\n            console.log(\"error submit!!\");\r\n            return false;\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * @description: 获取菜单数据\r\n * @param {*}\r\n * @return {*}\r\n */\r\nconst getMenuList = async () => {\r\n    const { code, data } = await VE_API.system.menuList(\r\n        {\r\n            limit: 10,\r\n            page: 1,\r\n            total: 0,\r\n        },\r\n        { Global: false }\r\n    );\r\n    if (code == \"00\") {\r\n        const list = XE.mapTree(\r\n            XE.toArrayTree(data, {\r\n                sortKey: \"sort\",\r\n            }),\r\n            (item) => {\r\n                if (item.children.length <= 0) {\r\n                    delete item.children;\r\n                }\r\n                return item;\r\n            }\r\n        );\r\n        menuList.value = list;\r\n    }\r\n};\r\n\r\n/**\r\n * @description:改变按钮的排列样式\r\n * @param {*}\r\n * @return {*}\r\n */\r\nconst setMenuStyle = () => {\r\n    let eles = document.getElementsByClassName(\"ve_tree_item\");\r\n    Array.from(eles).forEach((e) => {\r\n        const roleId = e.dataset.roleid * 1;\r\n        const index =\r\n            treeFindPath(menuList.value, (item) => item.id == roleId).length -\r\n            1;\r\n        e.parentNode.parentNode.parentNode.style.paddingLeft =\r\n            index * 18 + \"px\";\r\n        let oldClass = e.parentNode.className;\r\n        e.parentNode.className = oldClass + \" fl p0\";\r\n    });\r\n};\r\nonMounted(async () => {\r\n    await getMenuList();\r\n    nextTick(() => {\r\n        setMenuStyle();\r\n        if (title.value == \"添加\") {\r\n            tree.value.setCheckedNodes(menuList.value);\r\n        } else {\r\n            let _list = XE.toTreeArray(\r\n                XE.toArrayTree(rowData.value.role)\r\n            ).filter((item) => item.children.length < 1);\r\n            tree.value.setCheckedNodes(_list);\r\n        }\r\n    });\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\">\r\nbody {\r\n    .ve_role_item {\r\n        .el-form-item__content {\r\n            display: block !important;\r\n        }\r\n    }\r\n}\r\n.fl {\r\n    float: left;\r\n}\r\n.p0 {\r\n    padding: 0 !important;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}