{"ast":null,"code":"import { createElementVNode as _createElementVNode, unref as _unref, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, isRef as _isRef, createTextVNode as _createTextVNode, vShow as _vShow, withKeys as _withKeys, withDirectives as _withDirectives, Transition as _Transition, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-2e369c58\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"ve_container\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"vue3-element-admin\", -1));\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"登录\");\n\nimport { SET_TOKEN, SET_UNAME } from \"@/store/modules/app/type\";\nimport Common from \"@/components/Common\";\nimport { ref, reactive, toRefs } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { useRouter } from \"vue-router\";\nexport default {\n  __name: 'Login',\n\n  setup(__props) {\n    const rules = {\n      userName: [{\n        required: true,\n        message: \"请输入用户名\",\n        trigger: \"blur\"\n      }],\n      pwd: [{\n        required: true,\n        message: \"请输入密码\",\n        trigger: \"blur\"\n      }]\n    };\n    const store = useStore();\n    const router = useRouter();\n    const form = reactive({\n      userName: \"Administrator\",\n      pwd: \"123456\"\n    });\n    const {\n      userName,\n      pwd\n    } = toRefs(form);\n    const ref_form = ref(null);\n    const success = ref(false);\n    sessionStorage.clear();\n    store.dispatch(`app/${SET_TOKEN}`, \"\");\n    router.options.isAddDynamicMenuRoutes = false;\n\n    const onSubmit = () => {\n      ref_form.value.validate(async valid => {\n        if (valid) {\n          const data = await VE_API.system.login(form);\n\n          if (data.code === \"00\") {\n            const {\n              token,\n              uname\n            } = data;\n            store.dispatch(`app/${SET_TOKEN}`, token);\n            store.dispatch(`app/${SET_UNAME}`, uname);\n            success.value = true;\n            router.push({\n              name: \"AppMain\"\n            });\n          }\n        } else {\n          return;\n        }\n      });\n    };\n\n    return (_ctx, _cache) => {\n      const _component_Avatar = _resolveComponent(\"Avatar\");\n\n      const _component_el_icon = _resolveComponent(\"el-icon\");\n\n      const _component_el_input = _resolveComponent(\"el-input\");\n\n      const _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n      const _component_Key = _resolveComponent(\"Key\");\n\n      const _component_el_button = _resolveComponent(\"el-button\");\n\n      const _component_el_form = _resolveComponent(\"el-form\");\n\n      const _component_el_card = _resolveComponent(\"el-card\");\n\n      return _openBlock(), _createBlock(_unref(Common), null, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n          \"body-style\": {\n            background: 'rgba(0,0,0,0.15)'\n          }\n        }, {\n          default: _withCtx(() => [_hoisted_2, _createVNode(_Transition, {\n            name: \"el-fade-in-linear\"\n          }, {\n            default: _withCtx(() => [_withDirectives(_createVNode(_component_el_form, {\n              model: form,\n              rules: rules,\n              class: \"ve_form\",\n              ref_key: \"ref_form\",\n              ref: ref_form,\n              inline: false,\n              onKeyup: _withKeys(onSubmit, [\"enter\"])\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_form_item, {\n                prop: \"userName\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_input, {\n                  modelValue: _unref(userName),\n                  \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _isRef(userName) ? userName.value = $event : null),\n                  modelModifiers: {\n                    trim: true\n                  },\n                  placeholder: \"用户名\"\n                }, {\n                  prepend: _withCtx(() => [_createVNode(_component_el_icon, {\n                    size: 20\n                  }, {\n                    default: _withCtx(() => [_createVNode(_component_Avatar)]),\n                    _: 1\n                  })]),\n                  _: 1\n                }, 8, [\"modelValue\"])]),\n                _: 1\n              }), _createVNode(_component_el_form_item, {\n                prop: \"pwd\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_input, {\n                  modelValue: _unref(pwd),\n                  \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _isRef(pwd) ? pwd.value = $event : null),\n                  modelModifiers: {\n                    trim: true\n                  },\n                  \"show-password\": \"\",\n                  placeholder: \"密码\"\n                }, {\n                  prepend: _withCtx(() => [_createVNode(_component_el_icon, {\n                    size: 20\n                  }, {\n                    default: _withCtx(() => [_createVNode(_component_Key)]),\n                    _: 1\n                  })]),\n                  _: 1\n                }, 8, [\"modelValue\"])]),\n                _: 1\n              }), _createVNode(_component_el_form_item, null, {\n                default: _withCtx(() => [_createVNode(_component_el_button, {\n                  class: \"ve_submit\",\n                  type: \"primary\",\n                  onClick: onSubmit\n                }, {\n                  default: _withCtx(() => [_hoisted_3]),\n                  _: 1\n                })]),\n                _: 1\n              })]),\n              _: 1\n            }, 8, [\"model\", \"onKeyup\"]), [[_vShow, !success.value]])]),\n            _: 1\n          })]),\n          _: 1\n        }, 8, [\"body-style\"])])]),\n        _: 1\n      });\n    };\n  }\n\n};","map":null,"metadata":{},"sourceType":"module"}