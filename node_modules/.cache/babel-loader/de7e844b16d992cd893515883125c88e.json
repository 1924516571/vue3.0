{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport { unref as _unref, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, isRef as _isRef, vShow as _vShow, withDirectives as _withDirectives, resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\" 目录 \");\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\" 菜单 \");\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\" 按钮 \");\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"否\");\n\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\"是\");\n\nconst _hoisted_6 = {\n  style: {\n    \"margin\": \"0\"\n  }\n};\nconst _hoisted_7 = {\n  class: \"ve_select_option_slot\"\n};\nconst _hoisted_8 = {\n  key: 1,\n  style: {\n    \"color\": \"red\"\n  }\n};\n\nconst _hoisted_9 = /*#__PURE__*/_createTextVNode(\"取消\");\n\nconst _hoisted_10 = /*#__PURE__*/_createTextVNode(\"确定\");\n\nimport { icons, treeFindPath } from \"@/utils\";\nimport { reactive, ref, toRefs, computed, nextTick, onMounted } from \"vue\";\n/**\r\n * @description: 获取文件路径\r\n * @param {*}\r\n * @return {*}\r\n */\n\nexport default {\n  __name: 'MenuEdit',\n  props: {\n    showDialog: {\n      type: Boolean,\n      default: true\n    },\n    title: {\n      type: String,\n      default: \"添加\"\n    },\n    rowData: {\n      type: Object,\n      default: null\n    },\n    menuList: {\n      type: Array,\n      default: null\n    }\n  },\n  emits: [\"closeDialog\"],\n\n  setup(__props, {\n    emit\n  }) {\n    const props = __props;\n\n    const getfiles = () => {\n      const files = require.context(\"@/views/layoutpages\", true, /\\.vue$/);\n\n      return files.keys().map(key => {\n        return {\n          url: key.replace(/^(\\.\\/)|(\\.vue)/g, \"\"),\n          description: files(key).default.data && (files(key).default.data().description || \"无\"),\n          menus: files(key).default.data && (files(key).default.data().menus || [])\n        };\n      }).filter(key => {\n        return !key.url.includes(\"/components/\");\n      });\n    }; // import { useStore } from \"vuex\";\n\n\n    const {\n      title,\n      rowData,\n      menuList\n    } = toRefs(props);\n\n    const closeDialog = () => {\n      emit(\"closeDialog\", false);\n    };\n\n    const ve_icons = ref([]);\n    const formRef = ref(null);\n    const files = getfiles();\n    const form = reactive({\n      name: \"\",\n      type: 0,\n      parentId: -1,\n      menu: \"\",\n      url: \"\",\n      icon: \"Menu\",\n      iframe: 1,\n      sort: 1,\n      toPath: \"\"\n    });\n    const {\n      name,\n      type,\n      parentId,\n      menu,\n      url,\n      icon,\n      iframe,\n      sort,\n      toPath\n    } = toRefs(form);\n    /**\r\n     * @description: 字段重置\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n    const resetForm = () => {\n      name.value = \"\";\n      menu.value = \"\";\n      url.value = \"\";\n      icon.value = \"Menu\";\n      iframe.value = 1;\n      sort.value = 1;\n      toPath.value = \"\";\n    };\n    /**表单验证规则\r\n     * @description:\r\n     * @param {*} computed\r\n     * @return {*}\r\n     */\n\n\n    const rules = computed(() => ({\n      parentId: [{\n        required: type.value == 2 ? true : false,\n        message: \"请选择父级菜单\",\n        trigger: \"change\"\n      }],\n      name: [{\n        required: type.value != 2 ? true : false,\n        message: \"请输入菜单名称\",\n        trigger: \"blur\"\n      }],\n      menu: [{\n        required: type.value == 2 ? true : false,\n        message: \"请选择按钮\",\n        trigger: \"change\"\n      }],\n      icon: [{\n        required: type.value != 2 ? true : false,\n        message: \"请选择图标\",\n        trigger: \"change\"\n      }],\n      url: [{\n        required: type.value == 1 ? true : false,\n        pattern: /^(https?:\\/\\/)?(([a-zA-Z0-9_-])+(\\.)?)*(:\\d+)?(\\/((\\.)?(\\?)?=?&?[a-zA-Z0-9_-](\\?)?)*)*$/i,\n        message: \"url不正确\",\n        trigger: \"change\"\n      }]\n    }));\n    /**按钮目标菜单验证规则\r\n     * @description:\r\n     * @param {*} computed\r\n     * @return {*}\r\n     */\n\n    const toPathRule = computed(() => [{\n      required: changeToPath.value,\n      message: \"请选择目标菜单\",\n      trigger: \"change\"\n    }, {\n      validator: (rule, value, callback) => {\n        if (value == parentId.value) {\n          callback(new Error(\"不可以选择当前父级菜单\"));\n        } else {\n          callback();\n        }\n      },\n      trigger: \"change\"\n    }]);\n    /**\r\n     * @description:初始化赋值\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n    rowData.value && (name.value = rowData.value.name, type.value = rowData.value.type, parentId.value = rowData.value.parentId, url.value = rowData.value.url, menu.value = rowData.value.menu, icon.value = rowData.value.icon, iframe.value = rowData.value.iframe, toPath.value = rowData.value.toPath, sort.value = rowData.value.sort);\n    /**\r\n     * @description: 类型切换事件\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n    const changeType = val => {\n      nextTick(() => {\n        formRef.value.resetFields();\n      });\n      val == 2 && (icon.value = \"\");\n    };\n    /**\r\n     * @description: 图标下拉框展开事件\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n\n    const handelOptionsChange = flag => {\n      if (flag === true && ve_icons.value.length < 1) {\n        ve_icons.value = icons();\n      }\n    };\n    /**\r\n     * @description: 父级id切换事件\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n\n    const cascaderChange = () => {\n      if (type.value == 2) {\n        name.value = \"\";\n        menu.value = \"\";\n        nextTick(() => {\n          formRef.value.clearValidate(\"menu\");\n        });\n      }\n    };\n    /**\r\n     * @description:iframe切换事件\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n\n    const changeIframe = () => {\n      url.value = \"\";\n      nextTick(() => {\n        if (rowData.value && iframe.value == rowData.value.iframe) {\n          url.value = rowData.value.url;\n        }\n\n        formRef.value.clearValidate(\"url\");\n      });\n    };\n    /**\r\n     * @description:切换菜单按钮触发事件\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n\n    const changeMenu = () => {\n      name.value = menuOptions.value[menu.value][\"name\"];\n      toPath.value = \"\";\n      nextTick(() => {\n        if (rowData.value && menu.value == rowData.value.menu) {\n          toPath.value = rowData.value.toPath;\n        }\n\n        formRef.value.clearValidate(\"toPath\");\n      });\n    };\n    /**\r\n     * @description: 控制跳转菜单是否显示\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n\n    const changeToPath = computed(() => {\n      if (menuOptions.value && menu.value) {\n        return menuOptions.value[menu.value][\"toPath\"];\n      }\n\n      return false;\n    });\n    /**\r\n     * @description: 按钮的禁用函数\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n    const typeItemDisabled = computed(() => label => {\n      let flag = true;\n\n      switch (title.value) {\n        case \"编辑\":\n          if (label == type.value) {\n            flag = false;\n          }\n\n          break;\n\n        case \"添加子级\":\n          if (label == 0 || label == 1) {\n            flag = false;\n          }\n\n          break;\n\n        case \"添加按钮\":\n          if (label == 2) {\n            flag = false;\n          }\n\n          break;\n\n        default:\n          flag = false;\n          break;\n      }\n\n      return flag;\n    });\n    /**\r\n     * @description:获取menus列表\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n    const menuOptions = computed(() => {\n      // if (title.value == \"添加\" || title.value == \"添加按钮\") {\n      let _item = XE.findTree(menuList.value, item => item.id == parentId.value);\n\n      if (_item && files.find(item => item.url == _item.item.url)) {\n        return files.find(item => item.url == _item.item.url).menus;\n      } else {\n        return false;\n      } // }\n\n    });\n    /**\r\n     * @description: 已添加的按钮设为禁用\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n    const menuDisabled = computed(() => key => {\n      let _item = XE.findTree(menuList.value, item => item.id == parentId.value);\n\n      if (_item) {\n        if (rowData.value && key == rowData.value.menu) {\n          return false;\n        }\n\n        return _item.item.children && _item.item.children.find(item => item.menu == key) && true;\n      }\n    });\n    /**\r\n     * @description: 监听title\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n    const watchTitle = () => {\n      if (title.value == \"添加按钮\" || title.value == \"添加子级\") {\n        resetForm();\n        parentId.value = treeFindPath(menuList.value, data => data.id === rowData.value.id).slice(-1)[0];\n        title.value == \"添加按钮\" && (type.value = 2, icon.value = \"\");\n      }\n    };\n\n    onMounted(() => {\n      watchTitle();\n    });\n    /**\r\n     * @description:提交表单\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n    const onSubmit = () => {\n      formRef.value.validate(async valid => {\n        if (valid) {\n          let res;\n\n          if (title.value.includes(\"添加\")) {\n            res = await VE_API.system.menuAdd(form);\n          } else {\n            res = await VE_API.system.menuEdit({\n              id: rowData.value.id,\n              ...form\n            });\n          }\n\n          const {\n            code\n          } = res;\n\n          if (code == \"00\") {\n            closeDialog();\n          }\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    };\n\n    return (_ctx, _cache) => {\n      const _component_el_radio_button = _resolveComponent(\"el-radio-button\");\n\n      const _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n\n      const _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n      const _component_el_cascader = _resolveComponent(\"el-cascader\");\n\n      const _component_el_input_number = _resolveComponent(\"el-input-number\");\n\n      const _component_el_input = _resolveComponent(\"el-input\");\n\n      const _component_el_icon = _resolveComponent(\"el-icon\");\n\n      const _component_el_option = _resolveComponent(\"el-option\");\n\n      const _component_el_select = _resolveComponent(\"el-select\");\n\n      const _component_el_radio = _resolveComponent(\"el-radio\");\n\n      const _component_el_form = _resolveComponent(\"el-form\");\n\n      const _component_el_button = _resolveComponent(\"el-button\");\n\n      const _component_el_dialog = _resolveComponent(\"el-dialog\");\n\n      return _openBlock(), _createBlock(_component_el_dialog, {\n        title: _unref(title),\n        \"append-to-body\": \"\",\n        \"destroy-on-close\": \"\",\n        \"model-value\": __props.showDialog,\n        onClose: _cache[14] || (_cache[14] = $event => closeDialog())\n      }, {\n        footer: _withCtx(() => [_createElementVNode(\"span\", null, [_createVNode(_component_el_button, {\n          onClick: _cache[12] || (_cache[12] = $event => closeDialog())\n        }, {\n          default: _withCtx(() => [_hoisted_9]),\n          _: 1\n        }), _createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: _cache[13] || (_cache[13] = $event => onSubmit())\n        }, {\n          default: _withCtx(() => [_hoisted_10]),\n          _: 1\n        })])]),\n        default: _withCtx(() => [_createVNode(_component_el_form, {\n          ref_key: \"formRef\",\n          ref: formRef,\n          model: form,\n          \"label-width\": \"80px\",\n          rules: _unref(rules),\n          \"validate-on-rule-change\": false,\n          inline: false\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            label: \"类型\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_radio_group, {\n              modelValue: _unref(type),\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _isRef(type) ? type.value = $event : null),\n              onChange: changeType\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_radio_button, {\n                disabled: _unref(typeItemDisabled)(0),\n                label: 0\n              }, {\n                default: _withCtx(() => [_hoisted_1]),\n                _: 1\n              }, 8, [\"disabled\"]), _createVNode(_component_el_radio_button, {\n                disabled: _unref(typeItemDisabled)(1),\n                label: 1\n              }, {\n                default: _withCtx(() => [_hoisted_2]),\n                _: 1\n              }, 8, [\"disabled\"]), _createVNode(_component_el_radio_button, {\n                disabled: _unref(typeItemDisabled)(2),\n                label: 2\n              }, {\n                default: _withCtx(() => [_hoisted_3]),\n                _: 1\n              }, 8, [\"disabled\"])]),\n              _: 1\n            }, 8, [\"modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"父级\",\n            prop: \"parentId\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_cascader, {\n              style: {\n                \"width\": \"100%\"\n              },\n              options: _unref(menuList),\n              modelValue: _unref(parentId),\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _isRef(parentId) ? parentId.value = $event : null),\n              clearable: \"\",\n              filterable: \"\",\n              props: {\n                expandTrigger: 'hover',\n                emitPath: false,\n                checkStrictly: true,\n                value: 'id',\n                label: 'name',\n                disabled: _unref(type) == 2 ? 'iframe' : 'type'\n              },\n              onChange: cascaderChange,\n              disabled: _unref(title) != '添加'\n            }, null, 8, [\"options\", \"modelValue\", \"props\", \"disabled\"])]),\n            _: 1\n          }), _withDirectives(_createVNode(_component_el_form_item, {\n            label: \"排序\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input_number, {\n              modelValue: _unref(sort),\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _isRef(sort) ? sort.value = $event : null),\n              min: 0,\n              \"step-strictly\": \"\",\n              step: 1\n            }, null, 8, [\"modelValue\"])]),\n            _: 1\n          }, 512), [[_vShow, _unref(type) != 2]]), _withDirectives(_createVNode(_component_el_form_item, {\n            label: \"名称\",\n            prop: \"name\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: _unref(name),\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _isRef(name) ? name.value = $event : null)\n            }, null, 8, [\"modelValue\"])]),\n            _: 1\n          }, 512), [[_vShow, _unref(type) != 2]]), _withDirectives(_createVNode(_component_el_form_item, {\n            label: \"图标\",\n            prop: \"icon\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_select, {\n              style: {\n                \"width\": \"100%\"\n              },\n              modelValue: _unref(icon),\n              \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _isRef(icon) ? icon.value = $event : null),\n              placeholder: \"\",\n              clearable: \"\",\n              filterable: \"\",\n              onVisibleChange: handelOptionsChange,\n              \"popper-class\": \"ve_option_box\"\n            }, {\n              prefix: _withCtx(() => [_unref(type) != 2 ? (_openBlock(), _createBlock(_component_el_icon, {\n                key: 0,\n                size: 20,\n                style: {\n                  \"color\": \"#000\"\n                }\n              }, {\n                default: _withCtx(() => [(_openBlock(), _createBlock(_resolveDynamicComponent(_unref(icon))))]),\n                _: 1\n              })) : _createCommentVNode(\"\", true)]),\n              default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(ve_icons.value, item => {\n                return _openBlock(), _createBlock(_component_el_option, {\n                  style: {\n                    \"display\": \"inline-block\",\n                    \"height\": \"auto\",\n                    \"padding\": \"10px 11px 0px\"\n                  },\n                  key: item,\n                  label: item,\n                  value: item\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_el_icon, {\n                    title: item,\n                    size: 30\n                  }, {\n                    default: _withCtx(() => [(_openBlock(), _createBlock(_resolveDynamicComponent(item)))]),\n                    _: 2\n                  }, 1032, [\"title\"])]),\n                  _: 2\n                }, 1032, [\"label\", \"value\"]);\n              }), 128))]),\n              _: 1\n            }, 8, [\"modelValue\"])]),\n            _: 1\n          }, 512), [[_vShow, _unref(type) != 2]]), _withDirectives(_createVNode(_component_el_form_item, {\n            label: \"iframe\",\n            onChange: _cache[6] || (_cache[6] = $event => changeIframe())\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_radio_group, {\n              modelValue: _unref(iframe),\n              \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _isRef(iframe) ? iframe.value = $event : null)\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_radio_button, {\n                label: 0\n              }, {\n                default: _withCtx(() => [_hoisted_4]),\n                _: 1\n              }), _createVNode(_component_el_radio_button, {\n                label: 1\n              }, {\n                default: _withCtx(() => [_hoisted_5]),\n                _: 1\n              })]),\n              _: 1\n            }, 8, [\"modelValue\"])]),\n            _: 1\n          }, 512), [[_vShow, _unref(type) == 1]]), _withDirectives(_createVNode(_component_el_form_item, {\n            label: \"路径\",\n            prop: \"url\"\n          }, {\n            default: _withCtx(() => [_unref(iframe) == 1 ? (_openBlock(), _createBlock(_component_el_input, {\n              key: 0,\n              modelValue: _unref(url),\n              \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => _isRef(url) ? url.value = $event : null),\n              placeholder: \"请输入\",\n              clearable: \"\"\n            }, null, 8, [\"modelValue\"])) : (_openBlock(), _createBlock(_component_el_select, {\n              key: 1,\n              style: {\n                \"width\": \"100%\"\n              },\n              modelValue: _unref(url),\n              \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => _isRef(url) ? url.value = $event : null),\n              placeholder: \"\",\n              clearable: \"\"\n            }, {\n              default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(files), item => {\n                return _openBlock(), _createBlock(_component_el_option, {\n                  style: {\n                    \"height\": \"auto\"\n                  },\n                  key: item.url,\n                  label: item.url,\n                  value: item.url\n                }, {\n                  default: _withCtx(() => [_createElementVNode(\"p\", _hoisted_6, _toDisplayString(item.url), 1), _createElementVNode(\"span\", _hoisted_7, \" 描述 ：\" + _toDisplayString(item.description), 1)]),\n                  _: 2\n                }, 1032, [\"label\", \"value\"]);\n              }), 128))]),\n              _: 1\n            }, 8, [\"modelValue\"]))]),\n            _: 1\n          }, 512), [[_vShow, _unref(type) == 1]]), _withDirectives(_createVNode(_component_el_form_item, {\n            label: \"按钮\",\n            prop: \"menu\"\n          }, {\n            default: _withCtx(() => [_unref(menuOptions) ? (_openBlock(), _createBlock(_component_el_radio_group, {\n              key: 0,\n              modelValue: _unref(menu),\n              \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => _isRef(menu) ? menu.value = $event : null),\n              onChange: _cache[10] || (_cache[10] = $event => changeMenu())\n            }, {\n              default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(menuOptions), (item, key) => {\n                return _openBlock(), _createBlock(_component_el_radio, {\n                  key: key,\n                  label: key,\n                  disabled: _unref(menuDisabled)(key)\n                }, {\n                  default: _withCtx(() => [_createTextVNode(_toDisplayString(item.name), 1)]),\n                  _: 2\n                }, 1032, [\"label\", \"disabled\"]);\n              }), 128))]),\n              _: 1\n            }, 8, [\"modelValue\"])) : (_openBlock(), _createElementBlock(\"span\", _hoisted_8, \"该菜单下没有按钮\"))]),\n            _: 1\n          }, 512), [[_vShow, _unref(type) == 2]]), _withDirectives(_createVNode(_component_el_form_item, {\n            label: \"目标菜单\",\n            prop: \"toPath\",\n            rules: _unref(toPathRule)\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_cascader, {\n              style: {\n                \"width\": \"100%\"\n              },\n              options: _unref(menuList),\n              modelValue: _unref(toPath),\n              \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => _isRef(toPath) ? toPath.value = $event : null),\n              clearable: \"\",\n              filterable: \"\",\n              props: {\n                expandTrigger: 'hover',\n                emitPath: false,\n                checkStrictly: true,\n                value: 'id',\n                label: 'name',\n                disabled: 'iframe'\n              }\n            }, null, 8, [\"options\", \"modelValue\"])]),\n            _: 1\n          }, 8, [\"rules\"]), [[_vShow, _unref(type) == 2 && _unref(changeToPath)]])]),\n          _: 1\n        }, 8, [\"model\", \"rules\"])]),\n        _: 1\n      }, 8, [\"title\", \"model-value\"]);\n    };\n  }\n\n};","map":null,"metadata":{},"sourceType":"module"}