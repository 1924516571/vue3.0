{"ast":null,"code":"import * as echarts from \"echarts/core\";\nimport { TitleComponent, TooltipComponent, GridComponent } from \"echarts/components\";\nimport { BarChart } from \"echarts/charts\";\nimport { CanvasRenderer } from \"echarts/renderers\";\nimport * as dayjs from \"dayjs\";\nimport { unwarp } from \"@/utils\";\nimport { onMounted, ref, onUnmounted } from \"vue\";\n/**\r\n * @description: 生成20条数据\r\n * @param {*}\r\n * @return {*}\r\n */\n\nexport default {\n  __name: 'LiveChart',\n\n  setup(__props, {\n    expose\n  }) {\n    expose();\n\n    const dataList = () => {\n      let date = [];\n      let num = [];\n      let nowTime = new Date().getTime();\n\n      for (let i = 0; i < 30; i++) {\n        date.push(dayjs(nowTime - i * 1000).format(\"HH:mm:ss\"));\n        num.push((Math.random() * 10).toFixed(0) * 1);\n      }\n\n      return {\n        date: date.reverse(),\n        num\n      };\n    };\n\n    echarts.use([TitleComponent, TooltipComponent, GridComponent, BarChart, CanvasRenderer]);\n    const liveChart = ref(null);\n    const myChart = ref(null);\n    let timer = null;\n    let $_dataList = dataList();\n    let option = {\n      title: {\n        text: \"用户访问量\"\n      },\n      grid: {\n        left: \"0\",\n        right: \"0\",\n        top: \"10%\",\n        bottom: \"0\",\n        containLabel: true\n      },\n      tooltip: {\n        trigger: \"axis\"\n      },\n      xAxis: {\n        data: $_dataList.date\n      },\n      yAxis: {\n        type: \"value\"\n      },\n      series: [{\n        data: $_dataList.num,\n        type: \"bar\",\n        showBackground: true,\n        backgroundStyle: {\n          color: \"rgba(180, 180, 180, 0.2)\"\n        }\n      }]\n    };\n    /**\r\n     * @description: 动态数据\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n    const getNewData = myChart => {\n      unwarp(myChart.value).setOption(option);\n      timer = setInterval(() => {\n        $_dataList.date.shift();\n        $_dataList.num.shift();\n        $_dataList.date.push(dayjs(new Date().getTime()).format(\"HH:mm:ss\"));\n        $_dataList.num.push((Math.random() * 10).toFixed(0) * 1);\n        unwarp(myChart.value).setOption(option);\n      }, 1000);\n    };\n\n    onMounted(() => {\n      myChart.value = echarts.init(liveChart.value);\n      getNewData(myChart);\n    });\n    onUnmounted(() => {\n      unwarp(myChart.value).dispose();\n      clearInterval(timer);\n      timer = null;\n    });\n    const __returned__ = {\n      dataList,\n      liveChart,\n      myChart,\n      timer,\n      $_dataList,\n      option,\n      getNewData,\n      echarts,\n      TitleComponent,\n      TooltipComponent,\n      GridComponent,\n      BarChart,\n      CanvasRenderer,\n      dayjs,\n      unwarp,\n      onMounted,\n      ref,\n      onUnmounted\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"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","names":["echarts","TitleComponent","TooltipComponent","GridComponent","BarChart","CanvasRenderer","dayjs","unwarp","onMounted","ref","onUnmounted","dataList","date","num","nowTime","Date","getTime","i","push","format","Math","random","toFixed","reverse","use","liveChart","myChart","timer","$_dataList","option","title","text","grid","left","right","top","bottom","containLabel","tooltip","trigger","xAxis","data","yAxis","type","series","showBackground","backgroundStyle","color","getNewData","value","setOption","setInterval","shift","init","dispose","clearInterval"],"sources":["C:/Users/Administrator/Desktop/vue3-element-admin-dev/src/components/dashboard/LiveChart.vue"],"sourcesContent":["<!--\r\n * @Author: your name\r\n * @Date: 2021-03-16 15:09:41\r\n * @LastEditTime: 2022-01-20 14:19:13\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\vue3-element-admin\\src\\components\\dashboard\\LiveChart.vue\r\n-->\r\n<template>\r\n    <div\r\n        v-resize=\"myChart\"\r\n        style=\"height: 400px; margin-top: 20px\"\r\n        ref=\"liveChart\"\r\n    ></div>\r\n</template>\r\n\r\n<script setup>\r\nimport * as echarts from \"echarts/core\";\r\nimport {\r\n    TitleComponent,\r\n    TooltipComponent,\r\n    GridComponent,\r\n} from \"echarts/components\";\r\nimport { BarChart } from \"echarts/charts\";\r\nimport { CanvasRenderer } from \"echarts/renderers\";\r\nimport * as dayjs from \"dayjs\";\r\nimport { unwarp } from \"@/utils\";\r\nimport { onMounted, ref, onUnmounted } from \"vue\";\r\n\r\n/**\r\n * @description: 生成20条数据\r\n * @param {*}\r\n * @return {*}\r\n */\r\nconst dataList = () => {\r\n    let date = [];\r\n    let num = [];\r\n    let nowTime = new Date().getTime();\r\n    for (let i = 0; i < 30; i++) {\r\n        date.push(dayjs(nowTime - i * 1000).format(\"HH:mm:ss\"));\r\n        num.push((Math.random() * 10).toFixed(0) * 1);\r\n    }\r\n    return {\r\n        date: date.reverse(),\r\n        num,\r\n    };\r\n};\r\n\r\necharts.use([\r\n    TitleComponent,\r\n    TooltipComponent,\r\n    GridComponent,\r\n    BarChart,\r\n    CanvasRenderer,\r\n]);\r\nconst liveChart = ref(null);\r\nconst myChart = ref(null);\r\nlet timer = null;\r\n\r\nlet $_dataList = dataList();\r\nlet option = {\r\n    title: {\r\n        text: \"用户访问量\",\r\n    },\r\n    grid: {\r\n        left: \"0\",\r\n        right: \"0\",\r\n        top: \"10%\",\r\n        bottom: \"0\",\r\n        containLabel: true,\r\n    },\r\n    tooltip: {\r\n        trigger: \"axis\",\r\n    },\r\n    xAxis: {\r\n        data: $_dataList.date,\r\n    },\r\n    yAxis: {\r\n        type: \"value\",\r\n    },\r\n    series: [\r\n        {\r\n            data: $_dataList.num,\r\n            type: \"bar\",\r\n            showBackground: true,\r\n            backgroundStyle: {\r\n                color: \"rgba(180, 180, 180, 0.2)\",\r\n            },\r\n        },\r\n    ],\r\n};\r\n/**\r\n * @description: 动态数据\r\n * @param {*}\r\n * @return {*}\r\n */\r\nconst getNewData = (myChart) => {\r\n    unwarp(myChart.value).setOption(option);\r\n\r\n    timer = setInterval(() => {\r\n        $_dataList.date.shift();\r\n        $_dataList.num.shift();\r\n        $_dataList.date.push(dayjs(new Date().getTime()).format(\"HH:mm:ss\"));\r\n        $_dataList.num.push((Math.random() * 10).toFixed(0) * 1);\r\n        unwarp(myChart.value).setOption(option);\r\n    }, 1000);\r\n};\r\nonMounted(() => {\r\n    myChart.value = echarts.init(liveChart.value);\r\n    getNewData(myChart);\r\n});\r\nonUnmounted(() => {\r\n    unwarp(myChart.value).dispose();\r\n    clearInterval(timer);\r\n    timer = null;\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n"]},"metadata":{},"sourceType":"module"}