{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderSlot as _renderSlot, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, resolveDirective as _resolveDirective, openBlock as _openBlock, createElementBlock as _createElementBlock, withDirectives as _withDirectives, createStaticVNode as _createStaticVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-2ca77d8d\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"ve_404\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"moon\\\" data-v-2ca77d8d></div><div class=\\\"moon__crater moon__crater1\\\" data-v-2ca77d8d></div><div class=\\\"moon__crater moon__crater2\\\" data-v-2ca77d8d></div><div class=\\\"moon__crater moon__crater3\\\" data-v-2ca77d8d></div><div class=\\\"moon__crater moon__crater4\\\" data-v-2ca77d8d></div><div class=\\\"star star1\\\" data-v-2ca77d8d>‚≠ê</div><div class=\\\"star star2\\\" data-v-2ca77d8d>‚≠ê</div><div class=\\\"star star3\\\" data-v-2ca77d8d>‚≠ê</div><div class=\\\"star star4\\\" data-v-2ca77d8d>‚≠ê</div><div class=\\\"star star5\\\" data-v-2ca77d8d>‚≠ê</div>\", 10);\n\nconst _hoisted_12 = {\n  class: \"error\"\n};\n\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"error__title\"\n}, \"404\", -1));\n\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"error__subtitle\"\n}, \"üê±üê±üê±(‚ìø_‚ìø)üê±üê±üê±\", -1));\n\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"error__description\"\n}, \"ÁúãÊù•‰Ω†ÊòØËø∑Ë∑Ø‰∫Ü......\", -1));\n\nconst _hoisted_16 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"error__button error__button--active\"\n}, \"ÂõûÂà∞È¶ñÈ°µ\", -1));\n\nconst _hoisted_17 = {\n  class: \"astronaut\"\n};\nimport Zdog from \"zdog\";\nimport { ref, onUnmounted, onMounted } from \"vue\";\nexport default {\n  __name: 'Common',\n\n  setup(__props) {\n    const cav = ref(null);\n    let timer = null;\n    onMounted(() => {\n      draw3dAstronaut();\n    });\n    /**\r\n     * @description: Áîª3dÂ§™Á©∫‰∫∫\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n    const draw3dAstronaut = () => {\n      cav.value.width = cav.value.parentNode.clientWidth;\n      cav.value.height = cav.value.parentNode.clientHeight; // colours\n\n      let dark_navy = \"#131e38\";\n      let orange = \"#fe9642\";\n      let cream = \"#FFF8E7\";\n      let light_purple = \"#7f3f98\";\n      let dark_purple = \"#563795\";\n      let cheese = \"#fbc715\"; // create illo\n\n      let illo = new Zdog.Illustration({\n        // set canvas with selector\n        element: cav.value,\n        dragRotate: true,\n        zoom: 0.65\n      });\n      /** Body **/\n      // Body\n\n      let body = new Zdog.RoundedRect({\n        addTo: illo,\n        width: 200,\n        height: 220,\n        color: \"white\",\n        fill: true,\n        cornerRadius: 16,\n        stroke: 60\n      }); // Backpack\n\n      new Zdog.RoundedRect({\n        addTo: body,\n        width: 180,\n        height: 310,\n        color: orange,\n        fill: true,\n        cornerRadius: 24,\n        stroke: 120,\n        translate: {\n          z: -85,\n          y: -60\n        }\n      });\n      /** arm **/\n\n      let arm = new Zdog.RoundedRect({\n        addTo: body,\n        height: 30,\n        width: 28,\n        stroke: 60,\n        fill: true,\n        color: dark_purple,\n        translate: {\n          x: -140,\n          y: -64\n        },\n        cornerRadius: 0.05\n      });\n      new Zdog.RoundedRect({\n        addTo: arm,\n        height: 120,\n        width: 12,\n        stroke: 60,\n        fill: true,\n        color: cream,\n        translate: {\n          y: 120\n        },\n        cornerRadius: 0.05\n      }); // bubble_arm\n\n      let bubble_arm = new Zdog.Shape({\n        addTo: arm,\n        path: [{\n          x: -20\n        }, {\n          x: 20\n        }],\n        stroke: 32,\n        color: light_purple,\n        translate: {\n          y: 210\n        }\n      });\n      bubble_arm.copy({\n        color: dark_purple,\n        translate: {\n          y: 230\n        }\n      }); // hand\n\n      new Zdog.RoundedRect({\n        addTo: bubble_arm,\n        height: 32,\n        width: 22,\n        translate: {\n          x: -8,\n          y: 60\n        },\n        fill: true,\n        color: cheese,\n        stroke: 30\n      });\n      new Zdog.RoundedRect({\n        addTo: bubble_arm,\n        height: 24,\n        width: 0,\n        translate: {\n          x: 24,\n          y: 50\n        },\n        fill: true,\n        color: orange,\n        stroke: 20\n      });\n      arm.copyGraph({\n        translate: {\n          x: 140,\n          y: -64\n        },\n        rotate: {\n          y: Zdog.TAU / 2\n        }\n      });\n      /** Leg **/\n\n      let leg = new Zdog.RoundedRect({\n        addTo: body,\n        height: 160,\n        width: 28,\n        stroke: 60,\n        fill: true,\n        color: cream,\n        translate: {\n          x: -56,\n          y: 230\n        },\n        cornerRadius: 0.05\n      }); // bubble_leg\n\n      let bubble_leg = new Zdog.Shape({\n        addTo: leg,\n        path: [{\n          x: -28\n        }, {\n          x: 28\n        }],\n        stroke: 32,\n        color: light_purple,\n        translate: {\n          y: 100\n        }\n      });\n      bubble_leg.copy({\n        color: dark_purple,\n        translate: {\n          y: 124\n        }\n      }); // foot\n\n      new Zdog.RoundedRect({\n        addTo: leg,\n        width: 96,\n        height: 24,\n        stroke: 40,\n        fill: true,\n        color: cheese,\n        translate: {\n          x: -24,\n          y: 170\n        },\n        cornerRadius: 24\n      });\n      leg.copyGraph({\n        translate: {\n          x: 56,\n          y: 230\n        },\n        rotate: {\n          y: Zdog.TAU / 2\n        }\n      });\n      /** Head **/\n      // Head\n\n      let head = new Zdog.RoundedRect({\n        addTo: body,\n        width: 216,\n        height: 180,\n        depth: 40,\n        cornerRadius: 80,\n        stroke: 60,\n        color: cream,\n        fill: true,\n        translate: {\n          y: -300\n        }\n      }); //add helmet\n\n      let helmet = new Zdog.RoundedRect({\n        addTo: head,\n        width: 210,\n        height: 165,\n        cornerRadius: 64,\n        color: dark_navy,\n        fill: true,\n        backface: false,\n        translate: {\n          z: 20\n        }\n      }); //add refletion\n\n      new Zdog.Rect({\n        addTo: helmet,\n        width: 48,\n        height: 2,\n        stroke: 10,\n        translate: {\n          x: 24,\n          y: -24,\n          z: 10\n        },\n        color: \"white\",\n        backface: false\n      }); // add ear\n\n      let ear = new Zdog.RoundedRect({\n        addTo: head,\n        width: 36,\n        height: 72,\n        cornerRadius: 80,\n        stroke: 20,\n        color: orange,\n        fill: true,\n        translate: {\n          x: -140\n        }\n      });\n      ear.copy({\n        translate: {\n          x: 140\n        }\n      }); // neck\n\n      let neck = new Zdog.Shape({\n        addTo: head,\n        path: [{\n          x: -110\n        }, {\n          x: 110\n        }],\n        translate: {\n          y: 120\n        },\n        stroke: 40,\n        color: light_purple\n      });\n      neck.copy({\n        translate: {\n          y: 160\n        },\n        color: dark_purple\n      });\n      /** extra **/\n\n      let stripe_1 = new Zdog.Shape({\n        addTo: body,\n        path: [{\n          x: -20\n        }, {\n          x: 20\n        }],\n        stroke: 10,\n        translate: {\n          x: 200,\n          z: 200\n        },\n        color: cheese\n      });\n      stripe_1.copy({\n        translate: {\n          x: 320,\n          y: 200,\n          z: -400\n        },\n        color: cheese\n      });\n      stripe_1.copy({\n        translate: {\n          x: -220,\n          y: 300,\n          z: -400\n        },\n        color: \"white\"\n      });\n      stripe_1.copy({\n        translate: {\n          x: -100,\n          y: 400,\n          z: -280\n        },\n        color: light_purple\n      });\n      stripe_1.copy({\n        translate: {\n          x: 50,\n          y: -60,\n          z: 150\n        },\n        color: orange\n      });\n      stripe_1.copy({\n        translate: {\n          x: -250,\n          y: 80,\n          z: 300\n        },\n        color: light_purple\n      });\n      stripe_1.copy({\n        translate: {\n          x: -350,\n          y: -280,\n          z: 175\n        },\n        color: dark_purple\n      });\n      stripe_1.copy({\n        translate: {\n          x: 250,\n          y: -380,\n          z: -175\n        },\n        color: \"white\"\n      }); // update & render\n\n      illo.updateRenderGraph();\n\n      function animate() {\n        // rotate illo each frame\n        illo.rotate.y += 0.005;\n        illo.rotate.x += 0.005;\n        illo.rotate.z += 0.005;\n        illo.updateRenderGraph(); // animate next frame\n\n        timer = requestAnimationFrame(animate);\n      } // start animation\n\n\n      animate();\n    };\n\n    onUnmounted(() => {\n      cancelAnimationFrame(timer);\n      timer = null;\n    });\n    return (_ctx, _cache) => {\n      const _component_router_link = _resolveComponent(\"router-link\");\n\n      const _directive_resize = _resolveDirective(\"resize\");\n\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _renderSlot(_ctx.$slots, \"default\", {}, () => [_createElementVNode(\"div\", _hoisted_12, [_hoisted_13, _hoisted_14, _hoisted_15, _createVNode(_component_router_link, {\n        to: \"/\"\n      }, {\n        default: _withCtx(() => [_hoisted_16]),\n        _: 1\n      })])]), _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_17, [_createElementVNode(\"canvas\", {\n        ref_key: \"cav\",\n        ref: cav\n      }, null, 512)])), [[_directive_resize, {\n        resize: draw3dAstronaut\n      }]])]);\n    };\n  }\n\n};","map":null,"metadata":{},"sourceType":"module"}