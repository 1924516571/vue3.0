{"ast":null,"code":"import UsersEdit from \"./components/UsersEdit\";\nimport { reactive, toRefs, ref, onMounted, getCurrentInstance } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\"; //?导入公共查询方法\n\nimport { onSubmit, resetForm, handleSizeChange, handleCurrentChange, getAsyncRouteName } from \"@/views/layoutpages/common\";\nconst __default__ = {\n  data: () => ({\n    description: \"用户信息查询与设置\",\n    menus: {\n      search: {\n        name: \"查询\"\n      },\n      add: {\n        name: \"添加\"\n      },\n      edit: {\n        name: \"编辑\"\n      },\n      del: {\n        name: \"删除\"\n      }\n    }\n  })\n};\nexport default /*#__PURE__*/Object.assign(__default__, {\n  __name: 'Users',\n\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const {\n      proxy\n    } = getCurrentInstance();\n    const route = useRoute();\n    const router = useRouter();\n    const rowData = ref(null);\n    const dialogTitle = ref(\"\");\n    const showDialog = ref(false);\n    const queryForm = ref(null);\n    const tableData = ref([]);\n    const params = reactive({\n      role: isNaN(route.query.id * 1) ? \"\" : route.query.id * 1,\n      limit: 10,\n      page: 1,\n      total: 0\n    });\n    const {\n      role,\n      limit,\n      page,\n      total\n    } = toRefs(params);\n    const roleList = ref([]);\n    /**\r\n     * @description:添加or编辑事件\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n    const handleEdit = (title, row = null) => {\n      showDialog.value = true;\n      dialogTitle.value = title;\n      rowData.value = row;\n    };\n    /**\r\n     * @description: 添加页面路由式\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n\n    const handleEditRoute = async title => {\n      let path = \"system/components/UsersEditRoute\";\n      const toName = await getAsyncRouteName(title, path, \"add\", {\n        router,\n        route\n      });\n      router.push({\n        name: toName\n      });\n    };\n    /**\r\n     * @description: 获取角色列表\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n\n    const getRoleList = async () => {\n      const {\n        code,\n        data\n      } = await VE_API.system.roleList({\n        page: 1,\n        limit: 10\n      } // { Global: false }\n      );\n\n      if (code == \"00\") {\n        const {\n          list\n        } = data;\n        roleList.value = list;\n      }\n    };\n    /**\r\n     * @description: dialog事件\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n\n    const handelDialog = e => {\n      showDialog.value = e;\n      getDataList();\n    };\n    /**\r\n     * @description:用户状态切换\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n\n    const handelSwitch = async (val, row) => {\n      if (row.id == undefined) return;\n      row.load = 1;\n      const {\n        code\n      } = await VE_API.system.userStatus({\n        id: row.id,\n        status: val\n      }, {\n        Global: false\n      });\n      setTimeout(() => {\n        row.load = 0;\n\n        if (code != \"00\") {\n          row.status = val == 1 ? 0 : 1;\n        }\n      }, 500);\n    };\n    /**删除行数据\r\n     * @description:\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n\n    const handleDel = id => {\n      proxy.$confirm(\"此操作将永久删除该数据, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"error\"\n      }).then(async () => {\n        const {\n          code\n        } = await VE_API.system.userDel({\n          id\n        });\n\n        if (code == \"00\") {\n          getDataList();\n        }\n      }).catch(() => {\n        proxy.$message({\n          type: \"info\",\n          message: \"已取消删除\"\n        });\n      });\n    };\n    /**\r\n     * @description: 获取列表数据\r\n     * @param {*}\r\n     * @return {*}\r\n     */\n\n\n    const getDataList = async () => {\n      const {\n        code,\n        data\n      } = await VE_API.system.userList(params);\n\n      if (code == \"00\") {\n        const {\n          limit,\n          page,\n          total,\n          list\n        } = data;\n        params.limit = limit;\n        params.page = page;\n        params.total = total;\n        tableData.value = list;\n      }\n    };\n\n    onMounted(async () => {\n      await getRoleList();\n      await getDataList(); // maxHeight(pagination, queryForm, toolBar, ve_max_height);\n    });\n    const __returned__ = {\n      proxy,\n      route,\n      router,\n      rowData,\n      dialogTitle,\n      showDialog,\n      queryForm,\n      tableData,\n      params,\n      role,\n      limit,\n      page,\n      total,\n      roleList,\n      handleEdit,\n      handleEditRoute,\n      getRoleList,\n      handelDialog,\n      handelSwitch,\n      handleDel,\n      getDataList,\n      UsersEdit,\n      reactive,\n      toRefs,\n      ref,\n      onMounted,\n      getCurrentInstance,\n      useRoute,\n      useRouter,\n      onSubmit,\n      resetForm,\n      handleSizeChange,\n      handleCurrentChange,\n      getAsyncRouteName\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n});","map":{"version":3,"mappings":"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","names":["UsersEdit","reactive","toRefs","ref","onMounted","getCurrentInstance","useRoute","useRouter","onSubmit","resetForm","handleSizeChange","handleCurrentChange","getAsyncRouteName","data","description","menus","search","name","add","edit","del","proxy","route","router","rowData","dialogTitle","showDialog","queryForm","tableData","params","role","isNaN","query","id","limit","page","total","roleList","handleEdit","title","row","value","handleEditRoute","path","toName","push","getRoleList","code","VE_API","system","list","handelDialog","e","getDataList","handelSwitch","val","undefined","load","userStatus","status","Global","setTimeout","handleDel","$confirm","confirmButtonText","cancelButtonText","type","then","userDel","catch","$message","message","userList"],"sources":["C:/Users/Administrator/Desktop/vue3-element-admin-dev/src/views/layoutpages/system/Users.vue"],"sourcesContent":["<!--\r\n * @Author: your name\r\n * @Date: 2021-02-05 14:52:13\r\n * @LastEditTime: 2021-11-30 18:50:08\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\vue3-element-admin\\src\\views\\layoutpages\\system\\Users.vue\r\n-->\r\n<template>\r\n    <div class=\"ve_container\">\r\n        <!-- 搜索 -->\r\n        <el-form ref=\"queryForm\" :inline=\"true\" :model=\"params\">\r\n            <el-form-item label=\"角色\" prop=\"role\">\r\n                <el-select clearable v-model=\"role\" placeholder=\"请选择\">\r\n                    <el-option\r\n                        v-for=\"item in roleList\"\r\n                        :key=\"item.id\"\r\n                        :label=\"item.name\"\r\n                        :value=\"item.id\"\r\n                    ></el-option>\r\n                </el-select>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-button\r\n                    type=\"primary\"\r\n                    @click=\"onSubmit(params, getDataList)\"\r\n                >\r\n                    {{ menus.search.name }}\r\n                </el-button>\r\n                <el-button @click=\"resetForm(queryForm, params, getDataList)\">\r\n                    重置\r\n                </el-button>\r\n            </el-form-item>\r\n        </el-form>\r\n\r\n        <!-- 列表 -->\r\n        <ve-table\r\n            :table=\"{\r\n                data: tableData,\r\n            }\"\r\n            :pagination=\"{\r\n                onSizeChange: (val) =>\r\n                    handleSizeChange(val, params, getDataList),\r\n                onCurrentChange: (val) =>\r\n                    handleCurrentChange(val, params, getDataList),\r\n                currentPage: page,\r\n                pageSize: limit,\r\n                total: total,\r\n            }\"\r\n        >\r\n            <template #tool_bar>\r\n                <el-button\r\n                    title=\"弹窗式\"\r\n                    v-permission=\"['add']\"\r\n                    size=\"small\"\r\n                    type=\"primary\"\r\n                    @click=\"handleEdit(menus.add.name)\"\r\n                >\r\n                    {{ menus.add.name }}\r\n                </el-button>\r\n                <el-button\r\n                    title=\"路由式\"\r\n                    v-permission=\"['add']\"\r\n                    size=\"small\"\r\n                    type=\"primary\"\r\n                    @click=\"handleEditRoute(menus.add.name)\"\r\n                >\r\n                    {{ menus.add.name }}\r\n                </el-button>\r\n            </template>\r\n            <el-table-column prop=\"name\" label=\"账号\"></el-table-column>\r\n            <el-table-column prop=\"userName\" label=\"用户名\"></el-table-column>\r\n            <el-table-column prop=\"password\" label=\"密码\">\r\n                <template v-slot=\"{ row }\">\r\n                    <el-tooltip\r\n                        class=\"item\"\r\n                        effect=\"dark\"\r\n                        :content=\"row.password\"\r\n                        placement=\"top\"\r\n                    >\r\n                        <span>\r\n                            {{\r\n                                row.password &&\r\n                                row.password\r\n                                    .split(\"\")\r\n                                    .fill(\"*\", 1, -1)\r\n                                    .join()\r\n                                    .replace(/\\,/g, \"\")\r\n                            }}\r\n                        </span>\r\n                    </el-tooltip>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"role\" label=\"角色\">\r\n                <template v-slot=\"{ row }\">\r\n                    <el-tag>\r\n                        {{\r\n                            (row.role || row.role == 0) &&\r\n                            roleList.filter((item) => item.id == row.role)[0]\r\n                                .name\r\n                        }}\r\n                    </el-tag>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"status\" label=\"状态\">\r\n                <template v-slot=\"{ row }\">\r\n                    <el-switch\r\n                        :loading=\"row.load ? true : false\"\r\n                        v-model=\"row.status\"\r\n                        :active-value=\"1\"\r\n                        :inactive-value=\"0\"\r\n                        active-color=\"#13ce66\"\r\n                        inactive-color=\"#ff4949\"\r\n                        @change=\"(val) => handelSwitch(val, row)\"\r\n                    >\r\n                        >\r\n                    </el-switch>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column fixed=\"right\" label=\"操作\">\r\n                <template v-slot:default=\"{ row }\">\r\n                    <el-button\r\n                        v-permission=\"['edit']\"\r\n                        @click.prevent=\"handleEdit(menus.edit.name, row)\"\r\n                        type=\"primary\"\r\n                        size=\"small\"\r\n                    >\r\n                        {{ menus.edit.name }}\r\n                    </el-button>\r\n                    <el-button\r\n                        v-permission=\"['del']\"\r\n                        @click.prevent=\"handleDel(row.id)\"\r\n                        type=\"danger\"\r\n                        size=\"small\"\r\n                    >\r\n                        {{ menus.del.name }}\r\n                    </el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </ve-table>\r\n\r\n        <!-- 编辑组件 -->\r\n        <users-edit\r\n            v-if=\"showDialog\"\r\n            :rowData=\"rowData\"\r\n            :title=\"dialogTitle\"\r\n            :showDialog=\"showDialog\"\r\n            @closeDialog=\"handelDialog($event)\"\r\n        />\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    data: () => ({\r\n        description: \"用户信息查询与设置\",\r\n        menus: {\r\n            search: { name: \"查询\" },\r\n            add: { name: \"添加\" },\r\n            edit: { name: \"编辑\" },\r\n            del: { name: \"删除\" },\r\n        },\r\n    }),\r\n};\r\n</script>\r\n\r\n<script setup>\r\nimport UsersEdit from \"./components/UsersEdit\";\r\nimport { reactive, toRefs, ref, onMounted, getCurrentInstance } from \"vue\";\r\nimport { useRoute, useRouter } from \"vue-router\";\r\n//?导入公共查询方法\r\nimport {\r\n    onSubmit,\r\n    resetForm,\r\n    handleSizeChange,\r\n    handleCurrentChange,\r\n    getAsyncRouteName,\r\n} from \"@/views/layoutpages/common\";\r\n\r\nconst { proxy } = getCurrentInstance();\r\nconst route = useRoute();\r\nconst router = useRouter();\r\nconst rowData = ref(null);\r\nconst dialogTitle = ref(\"\");\r\nconst showDialog = ref(false);\r\nconst queryForm = ref(null);\r\nconst tableData = ref([]);\r\nconst params = reactive({\r\n    role: isNaN(route.query.id * 1) ? \"\" : route.query.id * 1,\r\n    limit: 10,\r\n    page: 1,\r\n    total: 0,\r\n});\r\nconst { role, limit, page, total } = toRefs(params);\r\n\r\nconst roleList = ref([]);\r\n\r\n/**\r\n * @description:添加or编辑事件\r\n * @param {*}\r\n * @return {*}\r\n */\r\nconst handleEdit = (title, row = null) => {\r\n    showDialog.value = true;\r\n    dialogTitle.value = title;\r\n    rowData.value = row;\r\n};\r\n/**\r\n * @description: 添加页面路由式\r\n * @param {*}\r\n * @return {*}\r\n */\r\nconst handleEditRoute = async (title) => {\r\n    let path = \"system/components/UsersEditRoute\";\r\n    const toName = await getAsyncRouteName(title, path, \"add\", {\r\n        router,\r\n        route,\r\n    });\r\n    router.push({ name: toName });\r\n};\r\n/**\r\n * @description: 获取角色列表\r\n * @param {*}\r\n * @return {*}\r\n */\r\nconst getRoleList = async () => {\r\n    const { code, data } = await VE_API.system.roleList(\r\n        {\r\n            page: 1,\r\n            limit: 10,\r\n        }\r\n        // { Global: false }\r\n    );\r\n    if (code == \"00\") {\r\n        const { list } = data;\r\n        roleList.value = list;\r\n    }\r\n};\r\n/**\r\n * @description: dialog事件\r\n * @param {*}\r\n * @return {*}\r\n */\r\nconst handelDialog = (e) => {\r\n    showDialog.value = e;\r\n    getDataList();\r\n};\r\n/**\r\n * @description:用户状态切换\r\n * @param {*}\r\n * @return {*}\r\n */\r\nconst handelSwitch = async (val, row) => {\r\n    if (row.id == undefined) return;\r\n    row.load = 1;\r\n    const { code } = await VE_API.system.userStatus(\r\n        {\r\n            id: row.id,\r\n            status: val,\r\n        },\r\n        { Global: false }\r\n    );\r\n    setTimeout(() => {\r\n        row.load = 0;\r\n        if (code != \"00\") {\r\n            row.status = val == 1 ? 0 : 1;\r\n        }\r\n    }, 500);\r\n};\r\n/**删除行数据\r\n * @description:\r\n * @param {*}\r\n * @return {*}\r\n */\r\nconst handleDel = (id) => {\r\n    proxy\r\n        .$confirm(\"此操作将永久删除该数据, 是否继续?\", \"提示\", {\r\n            confirmButtonText: \"确定\",\r\n            cancelButtonText: \"取消\",\r\n            type: \"error\",\r\n        })\r\n        .then(async () => {\r\n            const { code } = await VE_API.system.userDel({ id });\r\n            if (code == \"00\") {\r\n                getDataList();\r\n            }\r\n        })\r\n        .catch(() => {\r\n            proxy.$message({\r\n                type: \"info\",\r\n                message: \"已取消删除\",\r\n            });\r\n        });\r\n};\r\n/**\r\n * @description: 获取列表数据\r\n * @param {*}\r\n * @return {*}\r\n */\r\nconst getDataList = async () => {\r\n    const { code, data } = await VE_API.system.userList(params);\r\n    if (code == \"00\") {\r\n        const { limit, page, total, list } = data;\r\n        params.limit = limit;\r\n        params.page = page;\r\n        params.total = total;\r\n        tableData.value = list;\r\n    }\r\n};\r\nonMounted(async () => {\r\n    await getRoleList();\r\n    await getDataList();\r\n    // maxHeight(pagination, queryForm, toolBar, ve_max_height);\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n"]},"metadata":{},"sourceType":"module"}