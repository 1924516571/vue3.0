{"ast":null,"code":"import { SET_TOKEN, SET_UNAME } from \"@/store/modules/app/type\";\nimport Common from \"@/components/Common\";\nimport { ref, reactive, toRefs, inject, computed, onMounted, getCurrentInstance } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { useRouter } from \"vue-router\";\nexport default {\n  __name: 'Login',\n\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const {\n      msg\n    } = getCurrentInstance().appContext.config.globalProperties;\n    const rules = {\n      userName: [{\n        required: true,\n        message: \"请输入用户名\",\n        trigger: \"blur\"\n      }],\n      pwd: [{\n        required: true,\n        message: \"请输入密码\",\n        trigger: \"blur\"\n      }]\n    };\n    const store = useStore();\n    const router = useRouter();\n    const form = reactive({\n      userName: \"Administrator\",\n      pwd: \"123456\"\n    });\n    const {\n      userName,\n      pwd\n    } = toRefs(form);\n    const ref_form = ref(null);\n    const success = ref(false);\n    sessionStorage.clear();\n    store.dispatch(`app/${SET_TOKEN}`, \"\");\n    router.options.isAddDynamicMenuRoutes = false;\n\n    const onSubmit = () => {\n      ref_form.value.validate(async valid => {\n        if (valid) {\n          const data = await VE_API.system.login(form);\n\n          if (data.code === \"00\") {\n            const {\n              token,\n              uname\n            } = data;\n            store.dispatch(`app/${SET_TOKEN}`, token);\n            store.dispatch(`app/${SET_UNAME}`, uname);\n            success.value = true;\n            router.push({\n              name: \"AppMain\"\n            });\n          }\n        } else {\n          return;\n        }\n      });\n    }; // const message = inject(\"message\");\n    // console.log(message, \"哈哈哈\");\n\n\n    onMounted(() => {\n      console.log(msg, \"今天\");\n    });\n    const __returned__ = {\n      msg,\n      rules,\n      store,\n      router,\n      form,\n      userName,\n      pwd,\n      ref_form,\n      success,\n      onSubmit,\n      SET_TOKEN,\n      SET_UNAME,\n      Common,\n      ref,\n      reactive,\n      toRefs,\n      inject,\n      computed,\n      onMounted,\n      getCurrentInstance,\n      useStore,\n      useRouter\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"AAgCA,SAASA,SAAT,EAAoBC,SAApB,QAAqC,0BAArC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,GAAT,EAAcC,QAAd,EAAwBC,MAAxB,EAAgCC,MAAhC,EAAwCC,QAAxC,EAAkDC,SAAlD,EAA6DC,kBAA7D,QAAuF,KAAvF;AACA,SAASC,QAAT,QAAyB,MAAzB;AACA,SAASC,SAAT,QAA0B,YAA1B;;;;;;;;IACA,MAAM;MAAEC;IAAF,IAAUH,kBAAkB,GAAGI,UAArB,CAAgCC,MAAhC,CAAuCC,gBAAvD;IACA,MAAMC,KAAK,GAAG;MACVC,QAAQ,EAAE,CAAC;QAAEC,QAAQ,EAAE,IAAZ;QAAkBC,OAAO,EAAE,QAA3B;QAAqCC,OAAO,EAAE;MAA9C,CAAD,CADA;MAEVC,GAAG,EAAE,CAAC;QAAEH,QAAQ,EAAE,IAAZ;QAAkBC,OAAO,EAAE,OAA3B;QAAoCC,OAAO,EAAE;MAA7C,CAAD;IAFK,CAAd;IAIA,MAAME,KAAK,GAAGZ,QAAQ,EAAtB;IACA,MAAMa,MAAM,GAAGZ,SAAS,EAAxB;IACA,MAAMa,IAAI,GAAGpB,QAAQ,CAAC;MAClBa,QAAQ,EAAE,eADQ;MAElBI,GAAG,EAAE;IAFa,CAAD,CAArB;IAIA,MAAM;MAAEJ,QAAF;MAAYI;IAAZ,IAAoBhB,MAAM,CAACmB,IAAD,CAAhC;IACA,MAAMC,QAAQ,GAAGtB,GAAG,CAAC,IAAD,CAApB;IACA,MAAMuB,OAAO,GAAGvB,GAAG,CAAC,KAAD,CAAnB;IACAwB,cAAc,CAACC,KAAf;IACAN,KAAK,CAACO,QAAN,CAAgB,OAAM7B,SAAU,EAAhC,EAAmC,EAAnC;IACAuB,MAAM,CAACO,OAAP,CAAeC,sBAAf,GAAwC,KAAxC;;IAEA,MAAMC,QAAQ,GAAG,MAAM;MACnBP,QAAQ,CAACQ,KAAT,CAAeC,QAAf,CAAwB,MAAOC,KAAP,IAAiB;QACrC,IAAIA,KAAJ,EAAW;UACP,MAAMC,IAAI,GAAG,MAAMC,MAAM,CAACC,MAAP,CAAcC,KAAd,CAAoBf,IAApB,CAAnB;;UACA,IAAIY,IAAI,CAACI,IAAL,KAAc,IAAlB,EAAwB;YACpB,MAAM;cAAEC,KAAF;cAASC;YAAT,IAAmBN,IAAzB;YACAd,KAAK,CAACO,QAAN,CAAgB,OAAM7B,SAAU,EAAhC,EAAmCyC,KAAnC;YACAnB,KAAK,CAACO,QAAN,CAAgB,OAAM5B,SAAU,EAAhC,EAAmCyC,KAAnC;YACAhB,OAAO,CAACO,KAAR,GAAgB,IAAhB;YACAV,MAAM,CAACoB,IAAP,CAAY;cAAEC,IAAI,EAAE;YAAR,CAAZ;UACH;QACJ,CATD,MASO;UACH;QACH;MACJ,CAbD;IAcH,CAfD,EAgBA;IACA;;;IACApC,SAAS,CAAC,MAAM;MACZqC,OAAO,CAACC,GAAR,CAAYlC,GAAZ,EAAiB,IAAjB;IACH,CAFQ,CAAT","names":["SET_TOKEN","SET_UNAME","Common","ref","reactive","toRefs","inject","computed","onMounted","getCurrentInstance","useStore","useRouter","msg","appContext","config","globalProperties","rules","userName","required","message","trigger","pwd","store","router","form","ref_form","success","sessionStorage","clear","dispatch","options","isAddDynamicMenuRoutes","onSubmit","value","validate","valid","data","VE_API","system","login","code","token","uname","push","name","console","log"],"sources":["C:/Users/Administrator/Desktop/vue3-element-admin-dev/src/views/Login.vue"],"sourcesContent":["<template>\r\n    <common>\r\n        <div class=\"ve_container\">\r\n            <el-card :body-style=\"{ background: 'rgba(0,0,0,0.15)' }\">\r\n                <h1>vue3-element-admin</h1>\r\n                <transition name=\"el-fade-in-linear\">\r\n                    <el-form :model=\"form\" :rules=\"rules\" v-show=\"!success\" class=\"ve_form\" ref=\"ref_form\" :inline=\"false\" @keyup.enter=\"onSubmit\">\r\n                        <el-form-item prop=\"userName\">\r\n                            <el-input v-model.trim=\"userName\" placeholder=\"用户名\">\r\n                                <template #prepend>\r\n                                    <el-icon :size=\"20\"><Avatar /></el-icon>\r\n                                </template>\r\n                            </el-input>\r\n                        </el-form-item>\r\n                        <el-form-item prop=\"pwd\">\r\n                            <el-input v-model.trim=\"pwd\" show-password placeholder=\"密码\">\r\n                                <template #prepend>\r\n                                    <el-icon :size=\"20\"><Key /></el-icon>\r\n                                </template>\r\n                            </el-input>\r\n                        </el-form-item>\r\n                        <el-form-item>\r\n                            <el-button class=\"ve_submit\" type=\"primary\" @click=\"onSubmit\">登录</el-button>\r\n                        </el-form-item>\r\n                    </el-form>\r\n                </transition>\r\n            </el-card>\r\n        </div>\r\n    </common>\r\n</template>\r\n\r\n<script setup>\r\nimport { SET_TOKEN, SET_UNAME } from \"@/store/modules/app/type\";\r\nimport Common from \"@/components/Common\";\r\nimport { ref, reactive, toRefs, inject, computed, onMounted, getCurrentInstance } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport { useRouter } from \"vue-router\";\r\nconst { msg } = getCurrentInstance().appContext.config.globalProperties;\r\nconst rules = {\r\n    userName: [{ required: true, message: \"请输入用户名\", trigger: \"blur\" }],\r\n    pwd: [{ required: true, message: \"请输入密码\", trigger: \"blur\" }],\r\n};\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst form = reactive({\r\n    userName: \"Administrator\",\r\n    pwd: \"123456\",\r\n});\r\nconst { userName, pwd } = toRefs(form);\r\nconst ref_form = ref(null);\r\nconst success = ref(false);\r\nsessionStorage.clear();\r\nstore.dispatch(`app/${SET_TOKEN}`, \"\");\r\nrouter.options.isAddDynamicMenuRoutes = false;\r\n\r\nconst onSubmit = () => {\r\n    ref_form.value.validate(async (valid) => {\r\n        if (valid) {\r\n            const data = await VE_API.system.login(form);\r\n            if (data.code === \"00\") {\r\n                const { token, uname } = data;\r\n                store.dispatch(`app/${SET_TOKEN}`, token);\r\n                store.dispatch(`app/${SET_UNAME}`, uname);\r\n                success.value = true;\r\n                router.push({ name: \"AppMain\" });\r\n            }\r\n        } else {\r\n            return;\r\n        }\r\n    });\r\n};\r\n// const message = inject(\"message\");\r\n// console.log(message, \"哈哈哈\");\r\nonMounted(() => {\r\n    console.log(msg, \"今天\");\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.ve_container {\r\n    position: absolute;\r\n    z-index: 1;\r\n    width: 400px;\r\n    top: 50%;\r\n    left: 100px;\r\n    transform: translateY(-50%);\r\n    transition: all 1s;\r\n    min-height: 273px;\r\n    text-align: center;\r\n    h1 {\r\n        font-size: 24px;\r\n        transition: all 1s;\r\n        font-weight: bold;\r\n        margin-bottom: 36px;\r\n    }\r\n    .ve_form {\r\n        .ve_submit {\r\n            width: 100%;\r\n        }\r\n        :deep(.el-input-group__prepend) {\r\n            padding: 0 10px;\r\n        }\r\n    }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}