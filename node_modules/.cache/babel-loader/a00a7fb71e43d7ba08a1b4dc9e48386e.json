{"ast":null,"code":"import { createVNode as _createVNode, resolveComponent as _resolveComponent } from \"vue\";\n\n/**\r\n * @description:提交搜索\r\n * @param {*}\r\n * @return {*}\r\n */\nexport const onSubmit = (params, getDataList) => {\n  params.limit = 10;\n  params.page = 1;\n  getDataList();\n};\n/**\r\n * @description:重置\r\n * @param {*}\r\n * @return {*}\r\n */\n\nexport const resetForm = (queryForm, params, getDataList) => {\n  queryForm.resetFields();\n  onSubmit(params, getDataList);\n};\n/**\r\n * @description:每页条数事件\r\n * @param {*}\r\n * @return {*}\r\n */\n\nexport const handleSizeChange = (val, params, getDataList) => {\n  params.page = 1;\n  params.limit = val;\n  getDataList();\n};\n/**\r\n * @description:改变页数事件\r\n * @param {*}\r\n * @return {*}\r\n */\n\nexport const handleCurrentChange = (val, params, getDataList) => {\n  params.page = val;\n  getDataList();\n};\n/**\r\n * @description: 获取按钮跳转菜单的路径\r\n * @param {btnName} 跳转按钮的key值\r\n * @param {toPathUrl} 需要跳转到的菜单的路径 该路径为layoutpages下的文件子路径\r\n * @param {pathId} 当前页面的路由id\r\n * @param {menuList} 所有注册过的路由列表\r\n * @param {proxy} vue实例\r\n * @return {name} 跳转路由的name值\r\n */\n\nexport const findName = (btnName, toPathUrl, pathId, menuList, proxy) => {\n  let toId = \"\";\n\n  let _item = XE.findTree(menuList, item => item.id == pathId);\n\n  if (_item && _item.item && _item.item.children && _item.item.children.length > 0) {\n    let btn = _item.item.children.find(item => item.menu == btnName);\n\n    btn && (toId = btn.toPath);\n  }\n\n  if (toId != \"\") {\n    let _toItem = XE.findTree(menuList, item => item.id == toId);\n\n    if (_toItem && _toItem.item) {\n      if (_toItem.item.iframe == 0) {\n        if (_toItem.item.url == toPathUrl) {\n          return `${toPathUrl.replace(/\\//g, \"-\")}-${toId}`;\n        }\n      } else {\n        return `i-${toId}`;\n      }\n    }\n  }\n\n  proxy.$message({\n    type: \"error\",\n    message: \"无法跳转,请联系系统管理员!\"\n  });\n};\n/**\r\n * @description:根据权限动态添加路由\r\n * @param {title} 标题名称\r\n * @param {path} 组件路径 layoutpages下的组件路径\r\n * @param {name} 按钮key值\r\n * @param {{ router, route }} 路由对象\r\n * @return {_route.name} 返回注册后的name值\r\n */\n\nexport const getAsyncRouteName = async (title, path, name, {\n  router,\n  route\n}) => {\n  const FunctionPage = require(\"@/components/FunctionPage.vue\").default;\n\n  const AsyncComponent = require(\"@/views/layoutpages/\" + path + \".vue\").default; // const { defineAsyncComponent } = require(\"vue\");\n  // const AsyncComponent = defineAsyncComponent(() =>\n  //     import(\"@/views/layoutpages/\" + path + \".vue\")\n  // );\n  // import { defineAsyncComponent } from \"vue\";\n  // import FunctionPage from \"@/components/FunctionPage\";\n\n\n  const app = {\n    components: {\n      FunctionPage,\n      AsyncComponent\n    },\n    data: () => ({\n      rName: null\n    }),\n    methods: {\n      reload(e) {\n        return e.returnValue = \"\";\n      }\n\n    },\n\n    mounted() {\n      this.rName = this.$route.name;\n      window.addEventListener(\"beforeunload\", this.reload);\n    },\n\n    beforeUnmount() {\n      window.removeEventListener(\"beforeunload\", this.reload);\n      this.$router.removeRoute(this.rName);\n    },\n\n    render() {\n      return _createVNode(_resolveComponent(\"function-page\"), {\n        \"title\": title\n      }, {\n        default: () => [_createVNode(_resolveComponent(\"async-component\"), null, null)]\n      });\n    }\n\n  };\n  const _route = {\n    name: route.name + \"/\" + name,\n    path: route.name + \"/\" + name,\n    component: app\n  };\n  await router.addRoute(\"AppMain\", _route);\n  return _route.name;\n};","map":{"version":3,"names":["onSubmit","params","getDataList","limit","page","resetForm","queryForm","resetFields","handleSizeChange","val","handleCurrentChange","findName","btnName","toPathUrl","pathId","menuList","proxy","toId","_item","XE","findTree","item","id","children","length","btn","find","menu","toPath","_toItem","iframe","url","replace","$message","type","message","getAsyncRouteName","title","path","name","router","route","FunctionPage","require","default","AsyncComponent","app","components","data","rName","methods","reload","e","returnValue","mounted","$route","window","addEventListener","beforeUnmount","removeEventListener","$router","removeRoute","render","_route","component","addRoute"],"sources":["C:/Users/Administrator/Desktop/vue3-element-admin-dev/src/views/layoutpages/common.js"],"sourcesContent":["/**\r\n * @description:提交搜索\r\n * @param {*}\r\n * @return {*}\r\n */\r\nexport const onSubmit = (params, getDataList) => {\r\n    params.limit = 10;\r\n    params.page = 1;\r\n    getDataList();\r\n};\r\n/**\r\n * @description:重置\r\n * @param {*}\r\n * @return {*}\r\n */\r\nexport const resetForm = (queryForm, params, getDataList) => {\r\n    queryForm.resetFields();\r\n    onSubmit(params, getDataList);\r\n};\r\n/**\r\n * @description:每页条数事件\r\n * @param {*}\r\n * @return {*}\r\n */\r\nexport const handleSizeChange = (val, params, getDataList) => {\r\n    params.page = 1;\r\n    params.limit = val;\r\n    getDataList();\r\n};\r\n/**\r\n * @description:改变页数事件\r\n * @param {*}\r\n * @return {*}\r\n */\r\nexport const handleCurrentChange = (val, params, getDataList) => {\r\n    params.page = val;\r\n    getDataList();\r\n};\r\n\r\n/**\r\n * @description: 获取按钮跳转菜单的路径\r\n * @param {btnName} 跳转按钮的key值\r\n * @param {toPathUrl} 需要跳转到的菜单的路径 该路径为layoutpages下的文件子路径\r\n * @param {pathId} 当前页面的路由id\r\n * @param {menuList} 所有注册过的路由列表\r\n * @param {proxy} vue实例\r\n * @return {name} 跳转路由的name值\r\n */\r\nexport const findName = (btnName, toPathUrl, pathId, menuList, proxy) => {\r\n    let toId = \"\";\r\n    let _item = XE.findTree(menuList, (item) => item.id == pathId);\r\n    if (_item && _item.item && _item.item.children && _item.item.children.length > 0) {\r\n        let btn = _item.item.children.find((item) => item.menu == btnName);\r\n\r\n        btn && (toId = btn.toPath);\r\n    }\r\n    if (toId != \"\") {\r\n        let _toItem = XE.findTree(menuList, (item) => item.id == toId);\r\n        if (_toItem && _toItem.item) {\r\n            if (_toItem.item.iframe == 0) {\r\n                if (_toItem.item.url == toPathUrl) {\r\n                    return `${toPathUrl.replace(/\\//g, \"-\")}-${toId}`;\r\n                }\r\n            } else {\r\n                return `i-${toId}`;\r\n            }\r\n        }\r\n    }\r\n    proxy.$message({\r\n        type: \"error\",\r\n        message: \"无法跳转,请联系系统管理员!\",\r\n    });\r\n};\r\n\r\n/**\r\n * @description:根据权限动态添加路由\r\n * @param {title} 标题名称\r\n * @param {path} 组件路径 layoutpages下的组件路径\r\n * @param {name} 按钮key值\r\n * @param {{ router, route }} 路由对象\r\n * @return {_route.name} 返回注册后的name值\r\n */\r\nexport const getAsyncRouteName = async (title, path, name, { router, route }) => {\r\n    const FunctionPage = require(\"@/components/FunctionPage.vue\").default;\r\n    const AsyncComponent = require(\"@/views/layoutpages/\" + path + \".vue\").default;\r\n    // const { defineAsyncComponent } = require(\"vue\");\r\n    // const AsyncComponent = defineAsyncComponent(() =>\r\n    //     import(\"@/views/layoutpages/\" + path + \".vue\")\r\n    // );\r\n    // import { defineAsyncComponent } from \"vue\";\r\n    // import FunctionPage from \"@/components/FunctionPage\";\r\n\r\n    const app = {\r\n        components: {\r\n            FunctionPage,\r\n            AsyncComponent,\r\n        },\r\n        data: () => ({\r\n            rName: null,\r\n        }),\r\n        methods: {\r\n            reload(e) {\r\n                return (e.returnValue = \"\");\r\n            },\r\n        },\r\n        mounted() {\r\n            this.rName = this.$route.name;\r\n            window.addEventListener(\"beforeunload\", this.reload);\r\n        },\r\n        beforeUnmount() {\r\n            window.removeEventListener(\"beforeunload\", this.reload);\r\n            this.$router.removeRoute(this.rName);\r\n        },\r\n        render() {\r\n            return (\r\n                <function-page title={title}>\r\n                    <async-component />\r\n                </function-page>\r\n            );\r\n        },\r\n    };\r\n    const _route = {\r\n        name: route.name + \"/\" + name,\r\n        path: route.name + \"/\" + name,\r\n\r\n        component: app,\r\n    };\r\n    await router.addRoute(\"AppMain\", _route);\r\n    return _route.name;\r\n};\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,QAAQ,GAAG,CAACC,MAAD,EAASC,WAAT,KAAyB;EAC7CD,MAAM,CAACE,KAAP,GAAe,EAAf;EACAF,MAAM,CAACG,IAAP,GAAc,CAAd;EACAF,WAAW;AACd,CAJM;AAKP;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMG,SAAS,GAAG,CAACC,SAAD,EAAYL,MAAZ,EAAoBC,WAApB,KAAoC;EACzDI,SAAS,CAACC,WAAV;EACAP,QAAQ,CAACC,MAAD,EAASC,WAAT,CAAR;AACH,CAHM;AAIP;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMM,gBAAgB,GAAG,CAACC,GAAD,EAAMR,MAAN,EAAcC,WAAd,KAA8B;EAC1DD,MAAM,CAACG,IAAP,GAAc,CAAd;EACAH,MAAM,CAACE,KAAP,GAAeM,GAAf;EACAP,WAAW;AACd,CAJM;AAKP;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMQ,mBAAmB,GAAG,CAACD,GAAD,EAAMR,MAAN,EAAcC,WAAd,KAA8B;EAC7DD,MAAM,CAACG,IAAP,GAAcK,GAAd;EACAP,WAAW;AACd,CAHM;AAKP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMS,QAAQ,GAAG,CAACC,OAAD,EAAUC,SAAV,EAAqBC,MAArB,EAA6BC,QAA7B,EAAuCC,KAAvC,KAAiD;EACrE,IAAIC,IAAI,GAAG,EAAX;;EACA,IAAIC,KAAK,GAAGC,EAAE,CAACC,QAAH,CAAYL,QAAZ,EAAuBM,IAAD,IAAUA,IAAI,CAACC,EAAL,IAAWR,MAA3C,CAAZ;;EACA,IAAII,KAAK,IAAIA,KAAK,CAACG,IAAf,IAAuBH,KAAK,CAACG,IAAN,CAAWE,QAAlC,IAA8CL,KAAK,CAACG,IAAN,CAAWE,QAAX,CAAoBC,MAApB,GAA6B,CAA/E,EAAkF;IAC9E,IAAIC,GAAG,GAAGP,KAAK,CAACG,IAAN,CAAWE,QAAX,CAAoBG,IAApB,CAA0BL,IAAD,IAAUA,IAAI,CAACM,IAAL,IAAaf,OAAhD,CAAV;;IAEAa,GAAG,KAAKR,IAAI,GAAGQ,GAAG,CAACG,MAAhB,CAAH;EACH;;EACD,IAAIX,IAAI,IAAI,EAAZ,EAAgB;IACZ,IAAIY,OAAO,GAAGV,EAAE,CAACC,QAAH,CAAYL,QAAZ,EAAuBM,IAAD,IAAUA,IAAI,CAACC,EAAL,IAAWL,IAA3C,CAAd;;IACA,IAAIY,OAAO,IAAIA,OAAO,CAACR,IAAvB,EAA6B;MACzB,IAAIQ,OAAO,CAACR,IAAR,CAAaS,MAAb,IAAuB,CAA3B,EAA8B;QAC1B,IAAID,OAAO,CAACR,IAAR,CAAaU,GAAb,IAAoBlB,SAAxB,EAAmC;UAC/B,OAAQ,GAAEA,SAAS,CAACmB,OAAV,CAAkB,KAAlB,EAAyB,GAAzB,CAA8B,IAAGf,IAAK,EAAhD;QACH;MACJ,CAJD,MAIO;QACH,OAAQ,KAAIA,IAAK,EAAjB;MACH;IACJ;EACJ;;EACDD,KAAK,CAACiB,QAAN,CAAe;IACXC,IAAI,EAAE,OADK;IAEXC,OAAO,EAAE;EAFE,CAAf;AAIH,CAxBM;AA0BP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,iBAAiB,GAAG,OAAOC,KAAP,EAAcC,IAAd,EAAoBC,IAApB,EAA0B;EAAEC,MAAF;EAAUC;AAAV,CAA1B,KAAgD;EAC7E,MAAMC,YAAY,GAAGC,OAAO,CAAC,+BAAD,CAAP,CAAyCC,OAA9D;;EACA,MAAMC,cAAc,GAAGF,OAAO,CAAC,yBAAyBL,IAAzB,GAAgC,MAAjC,CAAP,CAAgDM,OAAvE,CAF6E,CAG7E;EACA;EACA;EACA;EACA;EACA;;;EAEA,MAAME,GAAG,GAAG;IACRC,UAAU,EAAE;MACRL,YADQ;MAERG;IAFQ,CADJ;IAKRG,IAAI,EAAE,OAAO;MACTC,KAAK,EAAE;IADE,CAAP,CALE;IAQRC,OAAO,EAAE;MACLC,MAAM,CAACC,CAAD,EAAI;QACN,OAAQA,CAAC,CAACC,WAAF,GAAgB,EAAxB;MACH;;IAHI,CARD;;IAaRC,OAAO,GAAG;MACN,KAAKL,KAAL,GAAa,KAAKM,MAAL,CAAYhB,IAAzB;MACAiB,MAAM,CAACC,gBAAP,CAAwB,cAAxB,EAAwC,KAAKN,MAA7C;IACH,CAhBO;;IAiBRO,aAAa,GAAG;MACZF,MAAM,CAACG,mBAAP,CAA2B,cAA3B,EAA2C,KAAKR,MAAhD;MACA,KAAKS,OAAL,CAAaC,WAAb,CAAyB,KAAKZ,KAA9B;IACH,CApBO;;IAqBRa,MAAM,GAAG;MACL;QAAA,SAC0BzB;MAD1B;QAAA;MAAA;IAKH;;EA3BO,CAAZ;EA6BA,MAAM0B,MAAM,GAAG;IACXxB,IAAI,EAAEE,KAAK,CAACF,IAAN,GAAa,GAAb,GAAmBA,IADd;IAEXD,IAAI,EAAEG,KAAK,CAACF,IAAN,GAAa,GAAb,GAAmBA,IAFd;IAIXyB,SAAS,EAAElB;EAJA,CAAf;EAMA,MAAMN,MAAM,CAACyB,QAAP,CAAgB,SAAhB,EAA2BF,MAA3B,CAAN;EACA,OAAOA,MAAM,CAACxB,IAAd;AACH,CA/CM"},"metadata":{},"sourceType":"module"}