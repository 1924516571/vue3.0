{"ast":null,"code":"import UsersEdit from \"./components/UsersEdit\";\nimport { reactive, toRefs, ref, onMounted, getCurrentInstance } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\"; //?导入公共查询方法\n\nimport { onSubmit, resetForm, handleSizeChange, handleCurrentChange, getAsyncRouteName } from \"@/views/layoutpages/common\";\nconst __default__ = {\n  data: () => ({\n    description: \"用户信息查询与设置\",\n    menus: {\n      search: {\n        name: \"查询\"\n      },\n      add: {\n        name: \"添加\"\n      },\n      edit: {\n        name: \"编辑\"\n      },\n      del: {\n        name: \"删除\"\n      }\n    }\n  })\n};\nexport default /*#__PURE__*/Object.assign(__default__, {\n  __name: 'UserTable',\n\n  setup(__props, {\n    expose\n  }) {\n    expose(); // import VeTable from \"@/components/veBase/VeTable.vue\";\n\n    const {\n      proxy\n    } = getCurrentInstance();\n    const route = useRoute();\n    const router = useRouter();\n    const rowData = ref(null);\n    const dialogTitle = ref(\"\");\n    const showDialog = ref(false);\n    const queryForm = ref(null);\n    const tableData = ref([]);\n    const params = reactive({\n      role: isNaN(route.query.id * 1) ? \"\" : route.query.id * 1,\n      limit: 10,\n      page: 1,\n      total: 0\n    });\n    const {\n      role,\n      limit,\n      page,\n      total\n    } = toRefs(params);\n    const roleList = ref([]);\n    /**\n     * @description:添加or编辑事件\n     * @param {*}\n     * @return {*}\n     */\n\n    const handleEdit = (title, row = null) => {\n      showDialog.value = true;\n      dialogTitle.value = title;\n      rowData.value = row;\n    };\n    /**\n     * @description: 添加页面路由式\n     * @param {*}\n     * @return {*}\n     */\n\n\n    const handleEditRoute = async title => {\n      let path = \"system/components/UsersEditRoute\";\n      const toName = await getAsyncRouteName(title, path, \"add\", {\n        router,\n        route\n      });\n      router.push({\n        name: toName\n      });\n    };\n    /**\n     * @description: 获取角色列表\n     * @param {*}\n     * @return {*}\n     */\n\n\n    const getRoleList = async () => {\n      const {\n        code,\n        data\n      } = await VE_API.system.roleList({\n        page: 1,\n        limit: 10\n      } // { Global: false }\n      );\n\n      if (code == \"00\") {\n        const {\n          list\n        } = data;\n        roleList.value = list;\n      }\n    };\n    /**\n     * @description: dialog事件\n     * @param {*}\n     * @return {*}\n     */\n\n\n    const handelDialog = e => {\n      showDialog.value = e;\n      getDataList();\n    };\n    /**\n     * @description:用户状态切换\n     * @param {*}\n     * @return {*}\n     */\n\n\n    const handelSwitch = async (val, row) => {\n      if (row.id == undefined) return;\n      row.load = 1;\n      const {\n        code\n      } = await VE_API.system.userStatus({\n        id: row.id,\n        status: val\n      }, {\n        Global: false\n      });\n      row.load = 0;\n\n      if (code != \"00\") {\n        row.status = val == 1 ? 0 : 1;\n      }\n    };\n    /**删除行数据\n     * @description:\n     * @param {*}\n     * @return {*}\n     */\n\n\n    const handleDel = id => {\n      proxy.$confirm(\"此操作将永久删除该数据, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"error\"\n      }).then(async () => {\n        const {\n          code\n        } = await VE_API.system.userDel({\n          id\n        });\n\n        if (code == \"00\") {\n          getDataList();\n        }\n      }).catch(() => {\n        proxy.$message({\n          type: \"info\",\n          message: \"已取消删除\"\n        });\n      });\n    };\n    /**\n     * @description: 获取列表数据\n     * @param {*}\n     * @return {*}\n     */\n\n\n    const getDataList = async () => {\n      const {\n        code,\n        data\n      } = await VE_API.system.userList(params);\n\n      if (code == \"00\") {\n        const {\n          limit,\n          page,\n          total,\n          list\n        } = data;\n        params.limit = limit;\n        params.page = page;\n        params.total = total;\n        tableData.value = list;\n      }\n    };\n\n    onMounted(async () => {\n      await getRoleList();\n      await getDataList(); // maxHeight(pagination, queryForm, toolBar, ve_max_height);\n    });\n    const __returned__ = {\n      proxy,\n      route,\n      router,\n      rowData,\n      dialogTitle,\n      showDialog,\n      queryForm,\n      tableData,\n      params,\n      role,\n      limit,\n      page,\n      total,\n      roleList,\n      handleEdit,\n      handleEditRoute,\n      getRoleList,\n      handelDialog,\n      handelSwitch,\n      handleDel,\n      getDataList,\n      UsersEdit,\n      reactive,\n      toRefs,\n      ref,\n      onMounted,\n      getCurrentInstance,\n      useRoute,\n      useRouter,\n      onSubmit,\n      resetForm,\n      handleSizeChange,\n      handleCurrentChange,\n      getAsyncRouteName\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n});","map":{"version":3,"mappings":"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","names":["UsersEdit","reactive","toRefs","ref","onMounted","getCurrentInstance","useRoute","useRouter","onSubmit","resetForm","handleSizeChange","handleCurrentChange","getAsyncRouteName","data","description","menus","search","name","add","edit","del","proxy","route","router","rowData","dialogTitle","showDialog","queryForm","tableData","params","role","isNaN","query","id","limit","page","total","roleList","handleEdit","title","row","value","handleEditRoute","path","toName","push","getRoleList","code","VE_API","system","list","handelDialog","e","getDataList","handelSwitch","val","undefined","load","userStatus","status","Global","handleDel","$confirm","confirmButtonText","cancelButtonText","type","then","userDel","catch","$message","message","userList"],"sources":["C:/Users/Administrator/Desktop/vue3-element-admin-dev/src/views/layoutpages/system/UserTable.vue"],"sourcesContent":["<!--\n * @Author: your name\n * @Date: 2021-02-05 14:52:13\n * @LastEditTime: 2021-11-30 18:50:23\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\vue3-element-admin\\src\\views\\layoutpages\\system\\Users.vue\n-->\n<template>\n    <div class=\"ve_container\">\n        <!-- 搜索 -->\n        <el-form ref=\"queryForm\" :inline=\"true\" :model=\"params\">\n            <el-form-item label=\"角色\" prop=\"role\">\n                <el-select clearable v-model=\"role\" placeholder=\"请选择\">\n                    <el-option\n                        v-for=\"item in roleList\"\n                        :key=\"item.id\"\n                        :label=\"item.name\"\n                        :value=\"item.id\"\n                    ></el-option>\n                </el-select>\n            </el-form-item>\n            <el-form-item>\n                <el-button\n                    type=\"primary\"\n                    @click=\"onSubmit(params, getDataList)\"\n                >\n                    {{ menus.search.name }}\n                </el-button>\n                <el-button @click=\"resetForm(queryForm, params, getDataList)\">\n                    重置\n                </el-button>\n            </el-form-item>\n        </el-form>\n\n        <ve-table\n            :table=\"{\n                data: tableData,\n            }\"\n            :pagination=\"{\n                onSizeChange: (val) =>\n                    handleSizeChange(val, params, getDataList),\n                onCurrentChange: (val) =>\n                    handleCurrentChange(val, params, getDataList),\n                currentPage: page,\n                pageSize: limit,\n                total: total,\n            }\"\n        >\n            <template #tool_bar>\n                <el-button\n                    title=\"弹窗式\"\n                    v-permission=\"['add']\"\n                    size=\"small\"\n                    type=\"primary\"\n                    @click=\"handleEdit(menus.add.name)\"\n                >\n                    {{ menus.add.name }}\n                </el-button>\n                <el-button\n                    title=\"路由式\"\n                    v-permission=\"['add']\"\n                    size=\"small\"\n                    type=\"primary\"\n                    @click=\"handleEditRoute(menus.add.name)\"\n                >\n                    {{ menus.add.name }}\n                </el-button>\n            </template>\n            <el-table-column prop=\"name\" label=\"账号\" />\n            <el-table-column prop=\"userName\" label=\"用户名\" />\n            <el-table-column prop=\"password\" label=\"密码\">\n                <template v-slot=\"{ row }\">\n                    <el-tooltip\n                        class=\"item\"\n                        effect=\"dark\"\n                        :content=\"row.password\"\n                        placement=\"top\"\n                    >\n                        <span>\n                            {{\n                                row.password &&\n                                row.password\n                                    .split(\"\")\n                                    .fill(\"*\", 1, -1)\n                                    .join()\n                                    .replace(/\\,/g, \"\")\n                            }}\n                        </span>\n                    </el-tooltip>\n                </template>\n            </el-table-column>\n            <el-table-column prop=\"role\" label=\"角色\">\n                <template v-slot=\"{ row }\">\n                    <el-tag>\n                        {{\n                            (row.role || row.role == 0) &&\n                            roleList.filter((item) => item.id == row.role)[0]\n                                .name\n                        }}\n                    </el-tag>\n                </template>\n            </el-table-column>\n            <el-table-column prop=\"status\" label=\"状态\">\n                <template v-slot=\"{ row }\">\n                    <el-switch\n                        :loading=\"row.load ? true : false\"\n                        v-model=\"row.status\"\n                        :active-value=\"1\"\n                        :inactive-value=\"0\"\n                        active-color=\"#13ce66\"\n                        inactive-color=\"#ff4949\"\n                        @change=\"(val) => handelSwitch(val, row)\"\n                    >\n                        >\n                    </el-switch>\n                </template>\n            </el-table-column>\n            <el-table-column fixed=\"right\" label=\"操作\">\n                <template v-slot:default=\"{ row }\">\n                    <el-button\n                        v-permission=\"['edit']\"\n                        @click.prevent=\"handleEdit(menus.edit.name, row)\"\n                        type=\"primary\"\n                        size=\"small\"\n                    >\n                        {{ menus.edit.name }}\n                    </el-button>\n                    <el-button\n                        v-permission=\"['del']\"\n                        @click.prevent=\"handleDel(row.id)\"\n                        type=\"danger\"\n                        size=\"small\"\n                    >\n                        {{ menus.del.name }}\n                    </el-button>\n                </template>\n            </el-table-column>\n        </ve-table>\n\n        <!-- 编辑组件 -->\n        <users-edit\n            v-if=\"showDialog\"\n            :rowData=\"rowData\"\n            :title=\"dialogTitle\"\n            :showDialog=\"showDialog\"\n            @closeDialog=\"handelDialog($event)\"\n        />\n    </div>\n</template>\n<script>\nexport default {\n    data: () => ({\n        description: \"用户信息查询与设置\",\n        menus: {\n            search: { name: \"查询\" },\n            add: { name: \"添加\" },\n            edit: { name: \"编辑\" },\n            del: { name: \"删除\" },\n        },\n    }),\n};\n</script>\n\n<script setup>\n// import VeTable from \"@/components/veBase/VeTable.vue\";\nimport UsersEdit from \"./components/UsersEdit\";\nimport { reactive, toRefs, ref, onMounted, getCurrentInstance } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\n//?导入公共查询方法\nimport {\n    onSubmit,\n    resetForm,\n    handleSizeChange,\n    handleCurrentChange,\n    getAsyncRouteName,\n} from \"@/views/layoutpages/common\";\n\nconst { proxy } = getCurrentInstance();\nconst route = useRoute();\nconst router = useRouter();\nconst rowData = ref(null);\nconst dialogTitle = ref(\"\");\nconst showDialog = ref(false);\nconst queryForm = ref(null);\nconst tableData = ref([]);\nconst params = reactive({\n    role: isNaN(route.query.id * 1) ? \"\" : route.query.id * 1,\n    limit: 10,\n    page: 1,\n    total: 0,\n});\nconst { role, limit, page, total } = toRefs(params);\n\nconst roleList = ref([]);\n\n/**\n * @description:添加or编辑事件\n * @param {*}\n * @return {*}\n */\nconst handleEdit = (title, row = null) => {\n    showDialog.value = true;\n    dialogTitle.value = title;\n    rowData.value = row;\n};\n/**\n * @description: 添加页面路由式\n * @param {*}\n * @return {*}\n */\nconst handleEditRoute = async (title) => {\n    let path = \"system/components/UsersEditRoute\";\n    const toName = await getAsyncRouteName(title, path, \"add\", {\n        router,\n        route,\n    });\n    router.push({ name: toName });\n};\n/**\n * @description: 获取角色列表\n * @param {*}\n * @return {*}\n */\nconst getRoleList = async () => {\n    const { code, data } = await VE_API.system.roleList(\n        {\n            page: 1,\n            limit: 10,\n        }\n        // { Global: false }\n    );\n    if (code == \"00\") {\n        const { list } = data;\n        roleList.value = list;\n    }\n};\n/**\n * @description: dialog事件\n * @param {*}\n * @return {*}\n */\nconst handelDialog = (e) => {\n    showDialog.value = e;\n    getDataList();\n};\n/**\n * @description:用户状态切换\n * @param {*}\n * @return {*}\n */\nconst handelSwitch = async (val, row) => {\n    if (row.id == undefined) return;\n    row.load = 1;\n    const { code } = await VE_API.system.userStatus(\n        {\n            id: row.id,\n            status: val,\n        },\n        { Global: false }\n    );\n    row.load = 0;\n    if (code != \"00\") {\n        row.status = val == 1 ? 0 : 1;\n    }\n};\n/**删除行数据\n * @description:\n * @param {*}\n * @return {*}\n */\nconst handleDel = (id) => {\n    proxy\n        .$confirm(\"此操作将永久删除该数据, 是否继续?\", \"提示\", {\n            confirmButtonText: \"确定\",\n            cancelButtonText: \"取消\",\n            type: \"error\",\n        })\n        .then(async () => {\n            const { code } = await VE_API.system.userDel({ id });\n            if (code == \"00\") {\n                getDataList();\n            }\n        })\n        .catch(() => {\n            proxy.$message({\n                type: \"info\",\n                message: \"已取消删除\",\n            });\n        });\n};\n/**\n * @description: 获取列表数据\n * @param {*}\n * @return {*}\n */\nconst getDataList = async () => {\n    const { code, data } = await VE_API.system.userList(params);\n    if (code == \"00\") {\n        const { limit, page, total, list } = data;\n        params.limit = limit;\n        params.page = page;\n        params.total = total;\n        tableData.value = list;\n    }\n};\nonMounted(async () => {\n    await getRoleList();\n    await getDataList();\n    // maxHeight(pagination, queryForm, toolBar, ve_max_height);\n});\n</script>\n\n<style lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module"}